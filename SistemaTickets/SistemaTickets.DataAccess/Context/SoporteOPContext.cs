// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using SistemaTickets.Entities.Entities;

namespace SistemaTickets.DataAccess.Context;

public partial class SoporteOPContext : DbContext
{

    public SoporteOPContext()
    {
    }

    public SoporteOPContext(DbContextOptions<SoporteOPContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Agosto2022V3> Agosto2022V3s { get; set; }

    public virtual DbSet<Base20Meno> Base20Menos { get; set; }

    public virtual DbSet<Base20MenosDepuradum> Base20MenosDepurada { get; set; }

    public virtual DbSet<Base3> Base3s { get; set; }

    public virtual DbSet<BaseCallCenter> BaseCallCenters { get; set; }

    public virtual DbSet<BaseClientesEquifax> BaseClientesEquifaxes { get; set; }

    public virtual DbSet<CallCenterAgendum> CallCenterAgenda { get; set; }

    public virtual DbSet<CallCenterCliente> CallCenterClientes { get; set; }

    public virtual DbSet<CallCenterClientesBasesAnteriore> CallCenterClientesBasesAnteriores { get; set; }

    public virtual DbSet<CallCenterEstado> CallCenterEstados { get; set; }

    public virtual DbSet<CallCenterGestionBitacora> CallCenterGestionBitacoras { get; set; }

    public virtual DbSet<CallCenterPropuestaEconomica> CallCenterPropuestaEconomicas { get; set; }

    public virtual DbSet<CallCenterTelefono> CallCenterTelefonos { get; set; }

    public virtual DbSet<CallCenterUsuario> CallCenterUsuarios { get; set; }

    public virtual DbSet<Carga3> Carga3s { get; set; }

    public virtual DbSet<CargaCallCenter> CargaCallCenters { get; set; }

    public virtual DbSet<CargaCc5> CargaCc5s { get; set; }

    public virtual DbSet<CatalogoEmpresasIhss> CatalogoEmpresasIhsses { get; set; }

    public virtual DbSet<CatalogoManualDetalle> CatalogoManualDetalles { get; set; }

    public virtual DbSet<CatalogoManuale> CatalogoManuales { get; set; }

    public virtual DbSet<Cne> Cnes { get; set; }

    public virtual DbSet<Contador> Contadors { get; set; }

    public virtual DbSet<Dat0112023> Dat0112023s { get; set; }

    public virtual DbSet<Dat012024> Dat012024s { get; set; }

    public virtual DbSet<Dat082023> Dat082023s { get; set; }

    public virtual DbSet<Demanda> Demandas { get; set; }

    public virtual DbSet<Direccione> Direcciones { get; set; }

    public virtual DbSet<DireccionesCc> DireccionesCcs { get; set; }

    public virtual DbSet<Hoja1X2> Hoja1X2s { get; set; }

    public virtual DbSet<HojaIhss2023Feb> HojaIhss2023Febs { get; set; }

    public virtual DbSet<HojaX> HojaXes { get; set; }

    public virtual DbSet<HojaX1> HojaX1s { get; set; }

    public virtual DbSet<HojaX2> HojaX2s { get; set; }

    public virtual DbSet<Hojax3> Hojax3s { get; set; }

    public virtual DbSet<Ihss022023> Ihss022023s { get; set; }

    public virtual DbSet<Ihss2> Ihss2s { get; set; }

    public virtual DbSet<Ihss2017> Ihss2017s { get; set; }

    public virtual DbSet<Ihss2019> Ihss2019s { get; set; }

    public virtual DbSet<Ihss201905> Ihss201905s { get; set; }

    public virtual DbSet<Ihss201908> Ihss201908s { get; set; }

    public virtual DbSet<Ihss201912> Ihss201912s { get; set; }

    public virtual DbSet<Ihss202006> Ihss202006s { get; set; }

    public virtual DbSet<Ihss202011> Ihss202011s { get; set; }

    public virtual DbSet<Ihss202103> Ihss202103s { get; set; }

    public virtual DbSet<Ihss202106> Ihss202106s { get; set; }

    public virtual DbSet<Ihss202110> Ihss202110s { get; set; }

    public virtual DbSet<Ihss202201> Ihss202201s { get; set; }

    public virtual DbSet<Ihss202205> Ihss202205s { get; set; }

    public virtual DbSet<Ihss202208> Ihss202208s { get; set; }

    public virtual DbSet<Ihss202211> Ihss202211s { get; set; }

    public virtual DbSet<Ihss202302> Ihss202302s { get; set; }

    public virtual DbSet<Ihss202305> Ihss202305s { get; set; }

    public virtual DbSet<Ihss202308> Ihss202308s { get; set; }

    public virtual DbSet<Ihss202311> Ihss202311s { get; set; }

    public virtual DbSet<Ihss202401> Ihss202401s { get; set; }

    public virtual DbSet<Ihssbasemayo2022> Ihssbasemayo2022s { get; set; }

    public virtual DbSet<InformacionPlacasIp> InformacionPlacasIps { get; set; }

    public virtual DbSet<Planilla2010> Planilla2010s { get; set; }

    public virtual DbSet<PortalClientesClientesMora> PortalClientesClientesMoras { get; set; }

    public virtual DbSet<Prestadito> Prestaditos { get; set; }

    public virtual DbSet<Prestadito2> Prestadito2s { get; set; }

    public virtual DbSet<ProcesoArchivosSaf> ProcesoArchivosSafs { get; set; }

    public virtual DbSet<PruebasCarga> PruebasCargas { get; set; }

    public virtual DbSet<Requerimiento> Requerimientos { get; set; }

    public virtual DbSet<RequerimientoTipoAdjunto> RequerimientoTipoAdjuntos { get; set; }

    public virtual DbSet<RequerimientosAdjunto> RequerimientosAdjuntos { get; set; }

    public virtual DbSet<RequerimientosArea> RequerimientosAreas { get; set; }

    public virtual DbSet<RequerimientosBitacora> RequerimientosBitacoras { get; set; }

    public virtual DbSet<RequerimientosBitacora1> RequerimientosBitacoras1 { get; set; }

    public virtual DbSet<RequerimientosBitacorasEstado> RequerimientosBitacorasEstados { get; set; }

    public virtual DbSet<RequerimientosCatalogoCategoria> RequerimientosCatalogoCategorias { get; set; }

    public virtual DbSet<RequerimientosCatalogoEstado> RequerimientosCatalogoEstados { get; set; }

    public virtual DbSet<RequerimientosCatalogoTipodeRequerimiento> RequerimientosCatalogoTipodeRequerimientos { get; set; }

    public virtual DbSet<RequerimientosComentario> RequerimientosComentarios { get; set; }

    public virtual DbSet<RequerimientosContadore> RequerimientosContadores { get; set; }

    public virtual DbSet<RequerimientosEstado> RequerimientosEstados { get; set; }

    public virtual DbSet<RequerimientosMaestro> RequerimientosMaestros { get; set; }

    public virtual DbSet<RequerimientosUsuario> RequerimientosUsuarios { get; set; }

    public virtual DbSet<RpaTotal> RpaTotals { get; set; }

    public virtual DbSet<Sheet1> Sheet1s { get; set; }

    public virtual DbSet<SieavancesCc> SieavancesCcs { get; set; }

    public virtual DbSet<SieavancesCcme> SieavancesCcmes { get; set; }

    public virtual DbSet<SrcCliente> SrcClientes { get; set; }

    public virtual DbSet<TblCneMCensoNacional> TblCneMCensoNacionals { get; set; }

    public virtual DbSet<TblCneRCodigosHabiInha> TblCneRCodigosHabiInhas { get; set; }

    public virtual DbSet<TblCneREstatusIdentidad> TblCneREstatusIdentidads { get; set; }

    public virtual DbSet<TblCneRSexo> TblCneRSexos { get; set; }

    public virtual DbSet<TblDpgeAAldea> TblDpgeAAldeas { get; set; }

    public virtual DbSet<TblDpgeADepartamento> TblDpgeADepartamentos { get; set; }

    public virtual DbSet<TblDpgeALugarPoblado> TblDpgeALugarPoblados { get; set; }

    public virtual DbSet<TblDpgeAMunicipio> TblDpgeAMunicipios { get; set; }

    public virtual DbSet<TblDpgeMCentroVotacion> TblDpgeMCentroVotacions { get; set; }

    public virtual DbSet<TblDpgeMSectorElectoral> TblDpgeMSectorElectorals { get; set; }

    public virtual DbSet<TblDpgeRArea> TblDpgeRAreas { get; set; }

    public virtual DbSet<Tdato> Tdatos { get; set; }

    public virtual DbSet<Telefono> Telefonos { get; set; }

    public virtual DbSet<TutorialesAccesosArea> TutorialesAccesosAreas { get; set; }

    public virtual DbSet<TutorialesVideo> TutorialesVideos { get; set; }

    public virtual DbSet<Xbase2019> Xbase2019s { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Agosto2022V3>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("AGOSTO_2022_V3");

            entity.Property(e => e.Cel)
                .HasMaxLength(50)
                .HasColumnName("CEL");
            entity.Property(e => e.Diremp)
                .HasMaxLength(100)
                .HasColumnName("DIREMP");
            entity.Property(e => e.Empresa)
                .HasMaxLength(100)
                .HasColumnName("EMPRESA");
            entity.Property(e => e.Identidad)
                .HasMaxLength(50)
                .HasColumnName("IDENTIDAD");
            entity.Property(e => e.Nombre)
                .HasMaxLength(100)
                .HasColumnName("NOMBRE");
            entity.Property(e => e.Razon)
                .HasMaxLength(100)
                .HasColumnName("RAZON");
            entity.Property(e => e.Rtn)
                .HasMaxLength(50)
                .HasColumnName("RTN");
            entity.Property(e => e.Tel)
                .HasMaxLength(50)
                .HasColumnName("TEL");
            entity.Property(e => e.Telefono)
                .HasMaxLength(50)
                .HasColumnName("TELEFONO");
        });

        modelBuilder.Entity<Base20Meno>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.CodigoCarnet)
                .HasMaxLength(255)
                .HasColumnName("CODIGO_CARNET");
            entity.Property(e => e.CorreoCliente)
                .HasMaxLength(255)
                .HasColumnName("CORREO_CLIENTE");
            entity.Property(e => e.DireccionCliente)
                .HasMaxLength(255)
                .HasColumnName("DIRECCION_CLIENTE");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("datetime")
                .HasColumnName("FECHA_CREACION");
            entity.Property(e => e.NombrePropietario)
                .HasMaxLength(255)
                .HasColumnName("NOMBRE_PROPIETARIO");
            entity.Property(e => e.TelefonosCliente)
                .HasMaxLength(255)
                .HasColumnName("TELEFONOS_CLIENTE");
        });

        modelBuilder.Entity<Base20MenosDepuradum>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Base20Menos_Depurada");

            entity.Property(e => e.FcCorreoElectronico)
                .HasMaxLength(255)
                .HasColumnName("fcCorreoElectronico");
            entity.Property(e => e.FcDireccion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("fcDireccion");
            entity.Property(e => e.FcIdentidad)
                .HasMaxLength(13)
                .IsUnicode(false)
                .HasColumnName("fcIdentidad");
            entity.Property(e => e.FcNombreCliente)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("fcNombreCliente");
            entity.Property(e => e.FcTelefonos)
                .HasMaxLength(255)
                .HasColumnName("fcTelefonos");
        });

        modelBuilder.Entity<Base3>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Base3$");

            entity.Property(e => e.Direccion1).HasMaxLength(255);
            entity.Property(e => e.Direccion2).HasMaxLength(255);
            entity.Property(e => e.Identidad).HasMaxLength(255);
            entity.Property(e => e.PrimerApellido).HasMaxLength(255);
            entity.Property(e => e.PrimerNombre).HasMaxLength(255);
            entity.Property(e => e.SegundoApellido).HasMaxLength(255);
            entity.Property(e => e.SegundoNombre).HasMaxLength(255);
        });

        modelBuilder.Entity<BaseCallCenter>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("BaseCallCenter");

            entity.Property(e => e.CapacidadDePagoSemanal)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Capacidad_de_Pago_Semanal");
            entity.Property(e => e.CapacidadDisponible)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Capacidad_Disponible");
            entity.Property(e => e.Identidad)
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.MontoUtilizado)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Monto_Utilizado");
            entity.Property(e => e.PrimerApp)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("PrimerAPP");
            entity.Property(e => e.PrimerNombre)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.SegundoApp)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("SegundoAPP");
            entity.Property(e => e.SegundoNombre)
                .HasMaxLength(30)
                .IsUnicode(false);
        });

        modelBuilder.Entity<BaseClientesEquifax>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("BaseClientesEquifax");

            entity.Property(e => e.FcIdentidad)
                .HasMaxLength(13)
                .HasColumnName("fcIdentidad");
            entity.Property(e => e.FcTelefonos)
                .HasMaxLength(110)
                .HasColumnName("fcTelefonos");
            entity.Property(e => e.FiScore1).HasColumnName("fiScore1");
            entity.Property(e => e.FiScore2).HasColumnName("fiScore2");
            entity.Property(e => e.FiScore3).HasColumnName("fiScore3");
            entity.Property(e => e.FiScore4).HasColumnName("fiScore4");
            entity.Property(e => e.FiScore5).HasColumnName("fiScore5");
            entity.Property(e => e.FiScoreActual).HasColumnName("fiScoreActual");
        });

        modelBuilder.Entity<CallCenterAgendum>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CallCenter_Agenda");

            entity.Property(e => e.FcDetalle)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("fcDetalle");
            entity.Property(e => e.FcIdentidad)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false)
                .HasColumnName("fcIdentidad");
            entity.Property(e => e.FcUsuario)
                .IsRequired()
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("fcUsuario");
            entity.Property(e => e.FdFechaAgenda)
                .HasColumnType("datetime")
                .HasColumnName("fdFechaAgenda");
            entity.Property(e => e.FdFechaGestion)
                .HasColumnType("datetime")
                .HasColumnName("fdFechaGestion");
            entity.Property(e => e.FiActivo).HasColumnName("fiActivo");
        });

        modelBuilder.Entity<CallCenterCliente>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CallCenter_Clientes");

            entity.Property(e => e.FcDireccion1)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDireccion1");
            entity.Property(e => e.FcDireccion2)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDireccion2");
            entity.Property(e => e.FcIdentidad)
                .HasMaxLength(13)
                .IsUnicode(false)
                .HasColumnName("fcIdentidad");
            entity.Property(e => e.FcPrimerApellido)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("fcPrimerApellido");
            entity.Property(e => e.FcPrimerNombre)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("fcPrimerNombre");
            entity.Property(e => e.FcSegundoApellido)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("fcSegundoApellido");
            entity.Property(e => e.FcSegundoNombre)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("fcSegundoNombre");
            entity.Property(e => e.FcTelefono)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcTelefono");
            entity.Property(e => e.FcUsuario)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("fcUsuario");
            entity.Property(e => e.FdFechaScoreEquifax)
                .HasColumnType("datetime")
                .HasColumnName("fdFechaScoreEquifax");
            entity.Property(e => e.FdFechaUltimaGestion)
                .HasColumnType("datetime")
                .HasColumnName("fdFechaUltimaGestion");
            entity.Property(e => e.FiBaseAnterior).HasColumnName("fiBaseAnterior");
            entity.Property(e => e.FiBloqueo).HasColumnName("fiBloqueo");
            entity.Property(e => e.FiEstado).HasColumnName("fiEstado");
            entity.Property(e => e.FiUltimoScore).HasColumnName("fiUltimoScore");
            entity.Property(e => e.FnObligaciones).HasColumnName("fnObligaciones");
            entity.Property(e => e.FnOferta).HasColumnName("fnOferta");
        });

        modelBuilder.Entity<CallCenterClientesBasesAnteriore>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CallCenter_Clientes_BasesAnteriores");

            entity.Property(e => e.FcDireccion1)
                .HasMaxLength(110)
                .IsUnicode(false)
                .HasColumnName("fcDireccion1");
            entity.Property(e => e.FcDireccion2)
                .HasMaxLength(110)
                .IsUnicode(false)
                .HasColumnName("fcDireccion2");
            entity.Property(e => e.FcIdentidad)
                .HasMaxLength(13)
                .IsUnicode(false)
                .HasColumnName("fcIdentidad");
            entity.Property(e => e.FcPrimerApellido)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("fcPrimerApellido");
            entity.Property(e => e.FcPrimerNombre)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("fcPrimerNombre");
            entity.Property(e => e.FcSegundoApellido)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("fcSegundoApellido");
            entity.Property(e => e.FcSegundoNombre)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("fcSegundoNombre");
            entity.Property(e => e.FcTelefono)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fcTelefono");
            entity.Property(e => e.FcUsuario)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("fcUsuario");
            entity.Property(e => e.FdFechaScoreEquifax)
                .HasColumnType("datetime")
                .HasColumnName("fdFechaScoreEquifax");
            entity.Property(e => e.FdFechaUltimaGestion)
                .HasColumnType("datetime")
                .HasColumnName("fdFechaUltimaGestion");
            entity.Property(e => e.FiBaseAnterior).HasColumnName("fiBaseAnterior");
            entity.Property(e => e.FiBaseOrigen).HasColumnName("fiBaseOrigen");
            entity.Property(e => e.FiBloqueo).HasColumnName("fiBloqueo");
            entity.Property(e => e.FiEstado).HasColumnName("fiEstado");
            entity.Property(e => e.FiUltimoScore).HasColumnName("fiUltimoScore");
            entity.Property(e => e.FnOferta).HasColumnName("fnOferta");
        });

        modelBuilder.Entity<CallCenterEstado>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CallCenter_Estado");

            entity.Property(e => e.FcDetalleEstado)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fcDetalleEstado");
            entity.Property(e => e.FiContactable).HasColumnName("fiContactable");
            entity.Property(e => e.FiEnProcesoLdc).HasColumnName("fiEnProcesoLDC");
            entity.Property(e => e.FiEstado).HasColumnName("fiEstado");
            entity.Property(e => e.FiProcesoAdicional).HasColumnName("fiProcesoAdicional");
            entity.Property(e => e.FiTipoMovimiento).HasColumnName("fiTipoMovimiento");
        });

        modelBuilder.Entity<CallCenterGestionBitacora>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CallCenter_GestionBitacora");

            entity.Property(e => e.FcComentarioAdicional)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("fcComentarioAdicional");
            entity.Property(e => e.FcIdentidad)
                .HasMaxLength(13)
                .IsUnicode(false)
                .HasColumnName("fcIdentidad");
            entity.Property(e => e.FcUsuario)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("fcUsuario");
            entity.Property(e => e.FdFechaGestion)
                .HasColumnType("datetime")
                .HasColumnName("fdFechaGestion");
            entity.Property(e => e.FiEstado).HasColumnName("fiEstado");
        });

        modelBuilder.Entity<CallCenterPropuestaEconomica>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CallCenter_PropuestaEconomica");

            entity.Property(e => e.FcIdproducto).HasColumnName("fcIDProducto");
            entity.Property(e => e.FnIngresosRangoInferior)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnIngresosRangoInferior");
            entity.Property(e => e.FnIngresosRangoSuperior)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnIngresosRangoSuperior");
            entity.Property(e => e.FnObligacionesRangoInferior)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnObligacionesRangoInferior");
            entity.Property(e => e.FnObligacionesRangoSuperior)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnObligacionesRangoSuperior");
            entity.Property(e => e.FnOferta)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnOferta");
        });

        modelBuilder.Entity<CallCenterTelefono>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CallCenter_Telefonos");

            entity.Property(e => e.FcIdentidad)
                .HasMaxLength(13)
                .IsUnicode(false)
                .HasColumnName("fcIdentidad");
            entity.Property(e => e.FcTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("fcTelefono");
        });

        modelBuilder.Entity<CallCenterUsuario>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CallCenter_Usuarios");

            entity.Property(e => e.FcNombreCorto)
                .IsRequired()
                .HasMaxLength(25)
                .IsUnicode(false)
                .HasColumnName("fcNombreCorto");
            entity.Property(e => e.FcNombreUsuario)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fcNombreUsuario");
            entity.Property(e => e.FcPassword)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fcPassword");
            entity.Property(e => e.FcUsuario)
                .IsRequired()
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("fcUsuario");
            entity.Property(e => e.FdUltimoLogueo)
                .HasColumnType("datetime")
                .HasColumnName("fdUltimoLogueo");
            entity.Property(e => e.FiEstado).HasColumnName("fiEstado");
        });

        modelBuilder.Entity<Carga3>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Carga3$");

            entity.Property(e => e.ApellidoM).HasMaxLength(255);
            entity.Property(e => e.ApellidoP).HasMaxLength(255);
            entity.Property(e => e.DirecionDomicilio).HasMaxLength(255);
            entity.Property(e => e.Identidad).HasMaxLength(255);
            entity.Property(e => e.Nombre).HasMaxLength(255);
        });

        modelBuilder.Entity<CargaCallCenter>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CargaCallCenter");

            entity.Property(e => e.Ciudad).HasMaxLength(255);
            entity.Property(e => e.Colonia).HasMaxLength(255);
            entity.Property(e => e.Direccion).HasMaxLength(255);
            entity.Property(e => e.FcUsuario)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("fcUsuario");
            entity.Property(e => e.FecUltGest).HasMaxLength(255);
            entity.Property(e => e.FiEstado)
                .HasMaxLength(255)
                .HasColumnName("fiEstado");
            entity.Property(e => e.Identidad).HasMaxLength(255);
            entity.Property(e => e.PrimerApp)
                .HasMaxLength(15)
                .HasColumnName("PrimerAPP");
            entity.Property(e => e.PrimerNombre).HasMaxLength(15);
            entity.Property(e => e.SegundoApp)
                .HasMaxLength(15)
                .HasColumnName("SegundoAPP");
            entity.Property(e => e.SegundoNombre).HasMaxLength(15);
            entity.Property(e => e.Telefono).HasMaxLength(50);
        });

        modelBuilder.Entity<CargaCc5>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CargaCC5");

            entity.Property(e => e.Dir1).HasMaxLength(255);
            entity.Property(e => e.Dir2).HasMaxLength(255);
            entity.Property(e => e.Identidad).HasMaxLength(255);
            entity.Property(e => e.Pappellido).HasMaxLength(255);
            entity.Property(e => e.Pnombre).HasMaxLength(255);
            entity.Property(e => e.Sapellido).HasMaxLength(255);
            entity.Property(e => e.Snombre).HasMaxLength(255);
            entity.Property(e => e.UltimaGestion).HasMaxLength(255);
        });

        modelBuilder.Entity<CatalogoEmpresasIhss>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Catalogo_EmpresasIHSS");

            entity.Property(e => e.FcNombreEmpresa)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpresa");
            entity.Property(e => e.FcRazonEmpresa)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcRazonEmpresa");
        });

        modelBuilder.Entity<CatalogoManualDetalle>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Catalogo_Manual_Detalle");

            entity.Property(e => e.FcNombreArchivo)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcNombreArchivo");
            entity.Property(e => e.FcRutaArchivo)
                .IsRequired()
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("fcRutaArchivo");
            entity.Property(e => e.FcTipoArchivo)
                .IsRequired()
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasColumnName("fcTipoArchivo");
            entity.Property(e => e.FcUrl)
                .IsRequired()
                .HasMaxLength(2000)
                .IsUnicode(false)
                .HasColumnName("fcURL");
            entity.Property(e => e.FdFechaRegistro)
                .HasColumnType("datetime")
                .HasColumnName("fdFechaRegistro");
            entity.Property(e => e.FiIdmanualDetalle)
                .ValueGeneratedOnAdd()
                .HasColumnName("fiIDManualDetalle");
            entity.Property(e => e.FiIdsolicitudManual).HasColumnName("fiIDSolicitudManual");
            entity.Property(e => e.FiIdusuarioCreador).HasColumnName("fiIDUsuarioCreador");
            entity.Property(e => e.FiNumeroPagina).HasColumnName("fiNumeroPagina");
        });

        modelBuilder.Entity<CatalogoManuale>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Catalogo_Manuales");

            entity.Property(e => e.FcDescripcion)
                .IsRequired()
                .HasColumnType("text")
                .HasColumnName("fcDescripcion");
            entity.Property(e => e.FcTitulo)
                .IsRequired()
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("fcTitulo");
            entity.Property(e => e.FdFechaCreacion)
                .HasColumnType("datetime")
                .HasColumnName("fdFechaCreacion");
            entity.Property(e => e.FdFechaUltimaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fdFechaUltimaModificacion");
            entity.Property(e => e.FiIdestado).HasColumnName("fiIDEstado");
            entity.Property(e => e.FiIdmanual)
                .ValueGeneratedOnAdd()
                .HasColumnName("fiIDManual");
            entity.Property(e => e.FiIdtipoManual).HasColumnName("fiIDTipoManual");
            entity.Property(e => e.FiIdusuarioAutor).HasColumnName("fiIDUsuarioAutor");
            entity.Property(e => e.FiIdusuarioUltimaModificacion).HasColumnName("fiIDUsuarioUltimaModificacion");
        });

        modelBuilder.Entity<Cne>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CNE");

            entity.Property(e => e.FcIdentidad)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fcIdentidad");
            entity.Property(e => e.FcPrimerApellido)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fcPrimerApellido");
            entity.Property(e => e.FcPrimerNombre)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fcPrimerNombre");
            entity.Property(e => e.FcSegundoApellido)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fcSegundoApellido");
            entity.Property(e => e.FcSegundoNombre)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fcSegundoNombre");
            entity.Property(e => e.FdFechadeNacimiento).HasColumnName("fdFechadeNacimiento");
            entity.Property(e => e.FiSexo).HasColumnName("fiSexo");
        });

        modelBuilder.Entity<Contador>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Contador");

            entity.Property(e => e.FcDescripcion)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("fcDescripcion");
            entity.Property(e => e.FiIdapp).HasColumnName("fiIDApp");
            entity.Property(e => e.FiIdconsecutivo).HasColumnName("fiIDConsecutivo");
            entity.Property(e => e.FiNoConsecutivo).HasColumnName("fiNoConsecutivo");
            entity.Property(e => e.FiTipoTransaccion).HasColumnName("fiTipoTransaccion");
        });

        modelBuilder.Entity<Dat0112023>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("DAT0112023$");

            entity.Property(e => e.Ciudad)
                .HasMaxLength(255)
                .HasColumnName("CIUDAD");
            entity.Property(e => e.Direc2)
                .HasMaxLength(255)
                .HasColumnName("DIREC2");
            entity.Property(e => e.Diremp)
                .HasMaxLength(255)
                .HasColumnName("DIREMP");
            entity.Property(e => e.Empresa)
                .HasMaxLength(255)
                .HasColumnName("EMPRESA");
            entity.Property(e => e.Ident)
                .HasMaxLength(255)
                .HasColumnName("IDENT");
            entity.Property(e => e.Movil)
                .HasMaxLength(255)
                .HasColumnName("MOVIL");
            entity.Property(e => e.Nombre)
                .HasMaxLength(255)
                .HasColumnName("NOMBRE");
            entity.Property(e => e.Razon)
                .HasMaxLength(255)
                .HasColumnName("RAZON");
            entity.Property(e => e.Rtn)
                .HasMaxLength(255)
                .HasColumnName("RTN");
            entity.Property(e => e.Tel)
                .HasMaxLength(255)
                .HasColumnName("TEL");
            entity.Property(e => e.Telemp)
                .HasMaxLength(255)
                .HasColumnName("TELEMP");
        });

        modelBuilder.Entity<Dat012024>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Dat012024$");

            entity.Property(e => e.Ciudad)
                .HasMaxLength(255)
                .HasColumnName("CIUDAD");
            entity.Property(e => e.Direc2)
                .HasMaxLength(255)
                .HasColumnName("DIREC2");
            entity.Property(e => e.Diremp)
                .HasMaxLength(255)
                .HasColumnName("DIREMP");
            entity.Property(e => e.Empresa)
                .HasMaxLength(255)
                .HasColumnName("EMPRESA");
            entity.Property(e => e.Ident)
                .HasMaxLength(255)
                .HasColumnName("IDENT");
            entity.Property(e => e.InformacionLaboral)
                .HasMaxLength(255)
                .HasColumnName("INFORMACION LABORAL");
            entity.Property(e => e.Movil)
                .HasMaxLength(255)
                .HasColumnName("MOVIL");
            entity.Property(e => e.Nombre)
                .HasMaxLength(255)
                .HasColumnName("NOMBRE");
            entity.Property(e => e.Razon)
                .HasMaxLength(255)
                .HasColumnName("RAZON");
            entity.Property(e => e.Rtn)
                .HasMaxLength(255)
                .HasColumnName("RTN");
            entity.Property(e => e.Tel)
                .HasMaxLength(255)
                .HasColumnName("TEL");
            entity.Property(e => e.Telemp)
                .HasMaxLength(255)
                .HasColumnName("TELEMP");
        });

        modelBuilder.Entity<Dat082023>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("DAT082023$");

            entity.Property(e => e.Ciudad)
                .HasMaxLength(255)
                .HasColumnName("CIUDAD");
            entity.Property(e => e.Direc2)
                .HasMaxLength(255)
                .HasColumnName("DIREC2");
            entity.Property(e => e.Diremp)
                .HasMaxLength(255)
                .HasColumnName("DIREMP");
            entity.Property(e => e.Empresa)
                .HasMaxLength(255)
                .HasColumnName("EMPRESA");
            entity.Property(e => e.F12).HasMaxLength(255);
            entity.Property(e => e.F13).HasMaxLength(255);
            entity.Property(e => e.Ident)
                .HasMaxLength(255)
                .HasColumnName("IDENT");
            entity.Property(e => e.Movil)
                .HasMaxLength(255)
                .HasColumnName("MOVIL");
            entity.Property(e => e.Nombre)
                .HasMaxLength(255)
                .HasColumnName("NOMBRE");
            entity.Property(e => e.Razon)
                .HasMaxLength(255)
                .HasColumnName("RAZON");
            entity.Property(e => e.Rtn)
                .HasMaxLength(255)
                .HasColumnName("RTN");
            entity.Property(e => e.Tel)
                .HasMaxLength(255)
                .HasColumnName("TEL");
            entity.Property(e => e.Telemp)
                .HasMaxLength(255)
                .HasColumnName("TELEMP");
        });

        modelBuilder.Entity<Demanda>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Demandas$");

            entity.Property(e => e.Identidad).HasMaxLength(255);
            entity.Property(e => e.NoPrestamo).HasMaxLength(255);
            entity.Property(e => e.Nombre).HasMaxLength(255);
            entity.Property(e => e.SolicitudAbogado).HasMaxLength(255);
            entity.Property(e => e.TotalAdeudado)
                .HasColumnType("money")
                .HasColumnName("TOTAL_ADEUDADO");
            entity.Property(e => e.TotalVencido)
                .HasColumnType("money")
                .HasColumnName("TOTAL_VENCIDO");
            entity.Property(e => e.Trabajo).HasMaxLength(255);
            entity.Property(e => e.Vehiculo).HasMaxLength(255);
        });

        modelBuilder.Entity<Direccione>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.Ciudad)
                .HasMaxLength(255)
                .HasColumnName("CIUDAD");
            entity.Property(e => e.Colonia)
                .HasMaxLength(255)
                .HasColumnName("COLONIA");
            entity.Property(e => e.Direccion)
                .HasMaxLength(255)
                .HasColumnName("DIRECCION");
            entity.Property(e => e.NombreCliente)
                .HasMaxLength(255)
                .HasColumnName("NOMBRE CLIENTE");
            entity.Property(e => e.NumeroIdentidad)
                .HasMaxLength(255)
                .HasColumnName("NUMERO_IDENTIDAD");
            entity.Property(e => e.Telefono)
                .HasMaxLength(255)
                .HasColumnName("TELEFONO");
        });

        modelBuilder.Entity<DireccionesCc>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("DireccionesCC");

            entity.Property(e => e.FcIdentidad)
                .HasMaxLength(13)
                .IsUnicode(false)
                .HasColumnName("fcIdentidad");
            entity.Property(e => e.FcTelefono)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("fcTelefono");
        });

        modelBuilder.Entity<Hoja1X2>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Hoja1X2");

            entity.Property(e => e.FcDireccion1)
                .HasMaxLength(255)
                .HasColumnName("fcDireccion1");
            entity.Property(e => e.FcDireccion2)
                .HasMaxLength(255)
                .HasColumnName("fcDireccion2");
            entity.Property(e => e.FcIdentidad)
                .HasMaxLength(255)
                .HasColumnName("fcIdentidad");
            entity.Property(e => e.FcPrimerApellido)
                .HasMaxLength(255)
                .HasColumnName("fcPrimerApellido");
            entity.Property(e => e.FcPrimerNombre)
                .HasMaxLength(255)
                .HasColumnName("fcPrimerNombre");
            entity.Property(e => e.FcSegundoApellido)
                .HasMaxLength(255)
                .HasColumnName("fcSegundoApellido");
            entity.Property(e => e.FcSegundoNombre)
                .HasMaxLength(255)
                .HasColumnName("fcSegundoNombre");
            entity.Property(e => e.FcTelefono)
                .HasMaxLength(255)
                .HasColumnName("fcTelefono");
            entity.Property(e => e.FcUsuario).HasColumnName("fcUsuario");
            entity.Property(e => e.FechaUltimaGestion)
                .HasMaxLength(255)
                .HasColumnName("fechaUltimaGestion");
            entity.Property(e => e.FiMonto).HasColumnName("fiMonto");
            entity.Property(e => e.Fiestado).HasColumnName("fiestado");
        });

        modelBuilder.Entity<HojaIhss2023Feb>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Hoja_IHSS2023_FEB");

            entity.Property(e => e.Base).HasColumnName("BASE");
            entity.Property(e => e.Celular)
                .HasMaxLength(255)
                .HasColumnName("CELULAR");
            entity.Property(e => e.Ciudad)
                .HasMaxLength(255)
                .HasColumnName("CIUDAD");
            entity.Property(e => e.Direc)
                .HasMaxLength(255)
                .HasColumnName("DIREC");
            entity.Property(e => e.Direccion)
                .HasMaxLength(255)
                .HasColumnName("DIRECCION");
            entity.Property(e => e.Empresa)
                .HasMaxLength(255)
                .HasColumnName("EMPRESA");
            entity.Property(e => e.Identidad)
                .HasMaxLength(255)
                .HasColumnName("IDENTIDAD");
            entity.Property(e => e.Nombre)
                .HasMaxLength(255)
                .HasColumnName("NOMBRE");
            entity.Property(e => e.Razon)
                .HasMaxLength(255)
                .HasColumnName("RAZON");
            entity.Property(e => e.Rtn)
                .HasMaxLength(255)
                .HasColumnName("RTN");
            entity.Property(e => e.TelEmple)
                .HasMaxLength(255)
                .HasColumnName("TEL_EMPLE");
            entity.Property(e => e.Telefono)
                .HasMaxLength(255)
                .HasColumnName("TELEFONO");
        });

        modelBuilder.Entity<HojaX>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("HojaX");

            entity.Property(e => e.CapacidadDePagoSemanal).HasColumnName("Capacidad_de_Pago_Semanal");
            entity.Property(e => e.CapacidadDisponible).HasColumnName("Capacidad_Disponible");
            entity.Property(e => e.Ciudad).HasMaxLength(255);
            entity.Property(e => e.Colonia).HasMaxLength(255);
            entity.Property(e => e.Direccion).HasMaxLength(255);
            entity.Property(e => e.FechaAlta)
                .HasColumnType("datetime")
                .HasColumnName("Fecha_Alta");
            entity.Property(e => e.FechaUltimaActividad)
                .HasColumnType("datetime")
                .HasColumnName("Fecha_ultima_Actividad");
            entity.Property(e => e.Id)
                .HasMaxLength(255)
                .HasColumnName("ID");
            entity.Property(e => e.IdentidadUnica).HasMaxLength(255);
            entity.Property(e => e.IngresoMensualAprobado).HasColumnName("Ingreso_mensual_Aprobado");
            entity.Property(e => e.MontoUtilizado).HasColumnName("Monto_Utilizado");
            entity.Property(e => e.Nombre).HasMaxLength(255);
            entity.Property(e => e.Ntienda).HasMaxLength(255);
            entity.Property(e => e.PrimerApp)
                .HasMaxLength(255)
                .HasColumnName("PrimerAPP");
            entity.Property(e => e.SegundoApp)
                .HasMaxLength(255)
                .HasColumnName("SegundoAPP");
            entity.Property(e => e.TipoDeCliente)
                .HasMaxLength(255)
                .HasColumnName("Tipo de Cliente");
        });

        modelBuilder.Entity<HojaX1>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("HojaX1");

            entity.Property(e => e.CapacidadDePagoSemanal).HasColumnName("Capacidad_de_Pago_Semanal");
            entity.Property(e => e.CapacidadDisponible).HasColumnName("Capacidad_Disponible");
            entity.Property(e => e.Ciudad).HasMaxLength(255);
            entity.Property(e => e.Colonia).HasMaxLength(255);
            entity.Property(e => e.Direccion).HasMaxLength(255);
            entity.Property(e => e.FechaAlta)
                .HasColumnType("datetime")
                .HasColumnName("Fecha_Alta");
            entity.Property(e => e.FechaUltimaActividad)
                .HasColumnType("datetime")
                .HasColumnName("Fecha_ultima_Actividad");
            entity.Property(e => e.Id)
                .HasMaxLength(255)
                .HasColumnName("ID");
            entity.Property(e => e.IngresoMensualAprobado).HasColumnName("Ingreso_mensual_Aprobado");
            entity.Property(e => e.MontoUtilizado).HasColumnName("Monto_Utilizado");
            entity.Property(e => e.Nombre).HasMaxLength(255);
            entity.Property(e => e.Ntienda).HasMaxLength(255);
            entity.Property(e => e.PrimerApp)
                .HasMaxLength(255)
                .HasColumnName("PrimerAPP");
            entity.Property(e => e.SegundoApp)
                .HasMaxLength(255)
                .HasColumnName("SegundoAPP");
            entity.Property(e => e.Telefono).HasMaxLength(255);
        });

        modelBuilder.Entity<HojaX2>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("HojaX2");

            entity.Property(e => e.ApellidoM).HasMaxLength(255);
            entity.Property(e => e.ApellidoP).HasMaxLength(255);
            entity.Property(e => e.DirecionDomicilio).HasMaxLength(255);
            entity.Property(e => e.Identidad).HasMaxLength(255);
            entity.Property(e => e.Nombre).HasMaxLength(255);
        });

        modelBuilder.Entity<Hojax3>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Hojax3");

            entity.Property(e => e.FcDireccion1)
                .HasMaxLength(255)
                .HasColumnName("fcDireccion1");
            entity.Property(e => e.FcDireccion2)
                .HasMaxLength(255)
                .HasColumnName("fcDireccion2");
            entity.Property(e => e.FcIdentidad)
                .HasMaxLength(255)
                .HasColumnName("fcIdentidad");
            entity.Property(e => e.FcPrimerApellido)
                .HasMaxLength(255)
                .HasColumnName("fcPrimerApellido");
            entity.Property(e => e.FcPrimerNombre)
                .HasMaxLength(255)
                .HasColumnName("fcPrimerNombre");
            entity.Property(e => e.FcSegundoApellido)
                .HasMaxLength(255)
                .HasColumnName("fcSegundoApellido");
            entity.Property(e => e.FcSegundoNombre)
                .HasMaxLength(255)
                .HasColumnName("fcSegundoNombre");
            entity.Property(e => e.FcTelefono)
                .HasMaxLength(255)
                .HasColumnName("fcTelefono");
            entity.Property(e => e.FcUsuario).HasColumnName("fcUsuario");
            entity.Property(e => e.FdFechaUltimaGestion)
                .HasMaxLength(255)
                .HasColumnName("fdFechaUltimaGestion");
            entity.Property(e => e.FiBaseAnterior).HasColumnName("fiBaseAnterior");
            entity.Property(e => e.FiBloqueo).HasColumnName("fiBloqueo");
            entity.Property(e => e.FiEstado).HasColumnName("fiEstado");
            entity.Property(e => e.FiUltimoScore).HasColumnName("fiUltimoScore");
            entity.Property(e => e.FnOferta).HasColumnName("fnOferta");
        });

        modelBuilder.Entity<Ihss022023>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IHSS_02_2023");

            entity.Property(e => e.Direccion)
                .HasMaxLength(255)
                .HasColumnName("DIRECCION");
            entity.Property(e => e.Empresa)
                .HasMaxLength(255)
                .HasColumnName("EMPRESA");
            entity.Property(e => e.Identidad)
                .HasMaxLength(255)
                .HasColumnName("IDENTIDAD");
            entity.Property(e => e.Nombre)
                .HasMaxLength(255)
                .HasColumnName("NOMBRE");
            entity.Property(e => e.Razon)
                .HasMaxLength(255)
                .HasColumnName("RAZON");
            entity.Property(e => e.Rtn)
                .HasMaxLength(255)
                .HasColumnName("RTN");
            entity.Property(e => e.Telefono)
                .HasMaxLength(255)
                .HasColumnName("TELEFONO");
        });

        modelBuilder.Entity<Ihss2>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IHSS2");

            entity.Property(e => e.FcDireccionEmpresa)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("fcDireccionEmpresa");
            entity.Property(e => e.FcEmpresa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcEmpresa");
            entity.Property(e => e.FcIdentidad)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fcIdentidad");
            entity.Property(e => e.FcNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombre");
            entity.Property(e => e.FcRazon)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("fcRazon");
            entity.Property(e => e.Fcrtn)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fcrtn");
        });

        modelBuilder.Entity<Ihss2017>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IHSS2017");

            entity.Property(e => e.FcDireccionEmpresa)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("fcDireccionEmpresa");
            entity.Property(e => e.FcEmpresa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcEmpresa");
            entity.Property(e => e.FcIdentidad)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fcIdentidad");
            entity.Property(e => e.FcNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombre");
            entity.Property(e => e.Fcrtn)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fcrtn");
        });

        modelBuilder.Entity<Ihss2019>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IHSS2019");

            entity.Property(e => e.FcDireccionEmpresa)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("fcDireccionEmpresa");
            entity.Property(e => e.FcEmpresa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcEmpresa");
            entity.Property(e => e.FcIdentidad)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fcIdentidad");
            entity.Property(e => e.FcNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombre");
            entity.Property(e => e.Fcrtn)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fcrtn");
        });

        modelBuilder.Entity<Ihss201905>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IHSS2019_05");

            entity.Property(e => e.FcCiudad)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fcCiudad");
            entity.Property(e => e.FcDireccion2)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("fcDireccion2");
            entity.Property(e => e.FcDireccionEmpresa)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("fcDIreccionEmpresa");
            entity.Property(e => e.FcIdentidad)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("fcIdentidad");
            entity.Property(e => e.FcNombreEmpleado)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpleado");
            entity.Property(e => e.FcNombreEmpresa)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpresa");
            entity.Property(e => e.FcRazonEmpresa)
                .IsRequired()
                .HasMaxLength(70)
                .IsUnicode(false)
                .HasColumnName("fcRazonEmpresa");
            entity.Property(e => e.FcTelefono1)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("fcTelefono1");
            entity.Property(e => e.FcTelefono2)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("fcTelefono2");
            entity.Property(e => e.FcTelefono3)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("fcTelefono3");
            entity.Property(e => e.FcTelefonoEmpresa)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("fcTelefonoEmpresa");
        });

        modelBuilder.Entity<Ihss201908>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IHSS2019_08");

            entity.Property(e => e.FcCiudad)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fcCiudad");
            entity.Property(e => e.FcDireccion2)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDireccion2");
            entity.Property(e => e.FcDireccionEmpresa)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDIreccionEmpresa");
            entity.Property(e => e.FcIdentidad)
                .IsRequired()
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("fcIdentidad");
            entity.Property(e => e.FcNombreEmpleado)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpleado");
            entity.Property(e => e.FcNombreEmpresa)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpresa");
            entity.Property(e => e.FcRazonEmpresa)
                .IsRequired()
                .HasMaxLength(70)
                .IsUnicode(false)
                .HasColumnName("fcRazonEmpresa");
            entity.Property(e => e.FcTelefono1)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("fcTelefono1");
            entity.Property(e => e.FcTelefono2)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("fcTelefono2");
            entity.Property(e => e.FcTelefono3)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("fcTelefono3");
            entity.Property(e => e.FcTelefonoEmpresa)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("fcTelefonoEmpresa");
        });

        modelBuilder.Entity<Ihss201912>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IHSS2019_12");

            entity.Property(e => e.FcCiudad)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fcCiudad");
            entity.Property(e => e.FcDireccion2)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDireccion2");
            entity.Property(e => e.FcDireccionEmpresa)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDIreccionEmpresa");
            entity.Property(e => e.FcIdentidad)
                .IsRequired()
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("fcIdentidad");
            entity.Property(e => e.FcNombreEmpleado)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpleado");
            entity.Property(e => e.FcNombreEmpresa)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpresa");
            entity.Property(e => e.FcRazonEmpresa)
                .IsRequired()
                .HasMaxLength(70)
                .IsUnicode(false)
                .HasColumnName("fcRazonEmpresa");
            entity.Property(e => e.FcTelefono1)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono1");
            entity.Property(e => e.FcTelefono2)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono2");
            entity.Property(e => e.FcTelefono3)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono3");
            entity.Property(e => e.FcTelefonoEmpresa)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefonoEmpresa");
        });

        modelBuilder.Entity<Ihss202006>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IHSS2020_06");

            entity.Property(e => e.FcCiudad)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fcCiudad");
            entity.Property(e => e.FcDireccion2)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDireccion2");
            entity.Property(e => e.FcDireccionEmpresa)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDIreccionEmpresa");
            entity.Property(e => e.FcIdentidad)
                .IsRequired()
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("fcIdentidad");
            entity.Property(e => e.FcNombreEmpleado)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpleado");
            entity.Property(e => e.FcNombreEmpresa)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpresa");
            entity.Property(e => e.FcRazonEmpresa)
                .IsRequired()
                .HasMaxLength(70)
                .IsUnicode(false)
                .HasColumnName("fcRazonEmpresa");
            entity.Property(e => e.FcTelefono1)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono1");
            entity.Property(e => e.FcTelefono2)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono2");
            entity.Property(e => e.FcTelefono3)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono3");
            entity.Property(e => e.FcTelefonoEmpresa)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefonoEmpresa");
        });

        modelBuilder.Entity<Ihss202011>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IHSS2020_11");

            entity.Property(e => e.FcCiudad)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fcCiudad");
            entity.Property(e => e.FcDireccion2)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDireccion2");
            entity.Property(e => e.FcDireccionEmpresa)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDIreccionEmpresa");
            entity.Property(e => e.FcIdentidad)
                .IsRequired()
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("fcIdentidad");
            entity.Property(e => e.FcNombreEmpleado)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpleado");
            entity.Property(e => e.FcNombreEmpresa)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpresa");
            entity.Property(e => e.FcRazonEmpresa)
                .IsRequired()
                .HasMaxLength(70)
                .IsUnicode(false)
                .HasColumnName("fcRazonEmpresa");
            entity.Property(e => e.FcTelefono1)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono1");
            entity.Property(e => e.FcTelefono2)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono2");
            entity.Property(e => e.FcTelefono3)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono3");
            entity.Property(e => e.FcTelefonoEmpresa)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefonoEmpresa");
        });

        modelBuilder.Entity<Ihss202103>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IHSS2021_03");

            entity.Property(e => e.FcCiudad)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fcCiudad");
            entity.Property(e => e.FcDireccion2)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDireccion2");
            entity.Property(e => e.FcDireccionEmpresa)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDIreccionEmpresa");
            entity.Property(e => e.FcIdentidad)
                .IsRequired()
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("fcIdentidad");
            entity.Property(e => e.FcNombreEmpleado)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpleado");
            entity.Property(e => e.FcNombreEmpresa)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpresa");
            entity.Property(e => e.FcRazonEmpresa)
                .IsRequired()
                .HasMaxLength(70)
                .IsUnicode(false)
                .HasColumnName("fcRazonEmpresa");
            entity.Property(e => e.FcTelefono1)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono1");
            entity.Property(e => e.FcTelefono2)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono2");
            entity.Property(e => e.FcTelefono3)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono3");
            entity.Property(e => e.FcTelefonoEmpresa)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefonoEmpresa");
        });

        modelBuilder.Entity<Ihss202106>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IHSS2021_06");

            entity.Property(e => e.FcCiudad)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fcCiudad");
            entity.Property(e => e.FcDireccion2)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDireccion2");
            entity.Property(e => e.FcDireccionEmpresa)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDIreccionEmpresa");
            entity.Property(e => e.FcIdentidad)
                .IsRequired()
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("fcIdentidad");
            entity.Property(e => e.FcNombreEmpleado)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpleado");
            entity.Property(e => e.FcNombreEmpresa)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpresa");
            entity.Property(e => e.FcRazonEmpresa)
                .IsRequired()
                .HasMaxLength(70)
                .IsUnicode(false)
                .HasColumnName("fcRazonEmpresa");
            entity.Property(e => e.FcTelefono1)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono1");
            entity.Property(e => e.FcTelefono2)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono2");
            entity.Property(e => e.FcTelefono3)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono3");
            entity.Property(e => e.FcTelefonoEmpresa)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefonoEmpresa");
        });

        modelBuilder.Entity<Ihss202110>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IHSS2021_10");

            entity.Property(e => e.FcCiudad)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fcCiudad");
            entity.Property(e => e.FcDireccion2)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDireccion2");
            entity.Property(e => e.FcDireccionEmpresa)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDIreccionEmpresa");
            entity.Property(e => e.FcIdentidad)
                .IsRequired()
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("fcIdentidad");
            entity.Property(e => e.FcNombreEmpleado)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpleado");
            entity.Property(e => e.FcNombreEmpresa)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpresa");
            entity.Property(e => e.FcRazonEmpresa)
                .IsRequired()
                .HasMaxLength(70)
                .IsUnicode(false)
                .HasColumnName("fcRazonEmpresa");
            entity.Property(e => e.FcTelefono1)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono1");
            entity.Property(e => e.FcTelefono2)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono2");
            entity.Property(e => e.FcTelefono3)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono3");
            entity.Property(e => e.FcTelefonoEmpresa)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefonoEmpresa");
        });

        modelBuilder.Entity<Ihss202201>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IHSS2022_01");

            entity.Property(e => e.FcCiudad)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fcCiudad");
            entity.Property(e => e.FcDireccion2)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDireccion2");
            entity.Property(e => e.FcDireccionEmpresa)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDIreccionEmpresa");
            entity.Property(e => e.FcIdentidad)
                .IsRequired()
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("fcIdentidad");
            entity.Property(e => e.FcNombreEmpleado)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpleado");
            entity.Property(e => e.FcNombreEmpresa)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpresa");
            entity.Property(e => e.FcRazonEmpresa)
                .IsRequired()
                .HasMaxLength(70)
                .IsUnicode(false)
                .HasColumnName("fcRazonEmpresa");
            entity.Property(e => e.FcTelefono1)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono1");
            entity.Property(e => e.FcTelefono2)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono2");
            entity.Property(e => e.FcTelefono3)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono3");
            entity.Property(e => e.FcTelefonoEmpresa)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefonoEmpresa");
        });

        modelBuilder.Entity<Ihss202205>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IHSS2022_05");

            entity.Property(e => e.FcCiudad)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fcCiudad");
            entity.Property(e => e.FcDireccion2)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDireccion2");
            entity.Property(e => e.FcDireccionEmpresa)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDIreccionEmpresa");
            entity.Property(e => e.FcIdentidad)
                .IsRequired()
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("fcIdentidad");
            entity.Property(e => e.FcNombreEmpleado)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpleado");
            entity.Property(e => e.FcNombreEmpresa)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpresa");
            entity.Property(e => e.FcRazonEmpresa)
                .IsRequired()
                .HasMaxLength(70)
                .IsUnicode(false)
                .HasColumnName("fcRazonEmpresa");
            entity.Property(e => e.FcTelefono1)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono1");
            entity.Property(e => e.FcTelefono2)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono2");
            entity.Property(e => e.FcTelefono3)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono3");
            entity.Property(e => e.FcTelefonoEmpresa)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefonoEmpresa");
        });

        modelBuilder.Entity<Ihss202208>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IHSS2022_08");

            entity.Property(e => e.FcCiudad)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fcCiudad");
            entity.Property(e => e.FcDireccion2)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDireccion2");
            entity.Property(e => e.FcDireccionEmpresa)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDIreccionEmpresa");
            entity.Property(e => e.FcIdentidad)
                .IsRequired()
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("fcIdentidad");
            entity.Property(e => e.FcNombreEmpleado)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpleado");
            entity.Property(e => e.FcNombreEmpresa)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpresa");
            entity.Property(e => e.FcRazonEmpresa)
                .IsRequired()
                .HasMaxLength(70)
                .IsUnicode(false)
                .HasColumnName("fcRazonEmpresa");
            entity.Property(e => e.FcTelefono1)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono1");
            entity.Property(e => e.FcTelefono2)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono2");
            entity.Property(e => e.FcTelefono3)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono3");
            entity.Property(e => e.FcTelefonoEmpresa)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefonoEmpresa");
        });

        modelBuilder.Entity<Ihss202211>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IHSS2022_11");

            entity.Property(e => e.FcCiudad)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fcCiudad");
            entity.Property(e => e.FcDireccion2)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDireccion2");
            entity.Property(e => e.FcDireccionEmpresa)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDIreccionEmpresa");
            entity.Property(e => e.FcIdentidad)
                .IsRequired()
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("fcIdentidad");
            entity.Property(e => e.FcNombreEmpleado)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpleado");
            entity.Property(e => e.FcNombreEmpresa)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpresa");
            entity.Property(e => e.FcRazonEmpresa)
                .IsRequired()
                .HasMaxLength(70)
                .IsUnicode(false)
                .HasColumnName("fcRazonEmpresa");
            entity.Property(e => e.FcTelefono1)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono1");
            entity.Property(e => e.FcTelefono2)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono2");
            entity.Property(e => e.FcTelefono3)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono3");
            entity.Property(e => e.FcTelefonoEmpresa)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefonoEmpresa");
        });

        modelBuilder.Entity<Ihss202302>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IHSS2023_02");

            entity.Property(e => e.FcCiudad)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fcCiudad");
            entity.Property(e => e.FcDireccion2)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDireccion2");
            entity.Property(e => e.FcDireccionEmpresa)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDIreccionEmpresa");
            entity.Property(e => e.FcIdentidad)
                .IsRequired()
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("fcIdentidad");
            entity.Property(e => e.FcNombreEmpleado)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpleado");
            entity.Property(e => e.FcNombreEmpresa)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpresa");
            entity.Property(e => e.FcRazonEmpresa)
                .IsRequired()
                .HasMaxLength(70)
                .IsUnicode(false)
                .HasColumnName("fcRazonEmpresa");
            entity.Property(e => e.FcTelefono1)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono1");
            entity.Property(e => e.FcTelefono2)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono2");
            entity.Property(e => e.FcTelefono3)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono3");
            entity.Property(e => e.FcTelefonoEmpresa)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefonoEmpresa");
        });

        modelBuilder.Entity<Ihss202305>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IHSS2023_05");

            entity.Property(e => e.FcCiudad)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fcCiudad");
            entity.Property(e => e.FcDireccion2)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDireccion2");
            entity.Property(e => e.FcDireccionEmpresa)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDIreccionEmpresa");
            entity.Property(e => e.FcIdentidad)
                .IsRequired()
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("fcIdentidad");
            entity.Property(e => e.FcNombreEmpleado)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpleado");
            entity.Property(e => e.FcNombreEmpresa)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpresa");
            entity.Property(e => e.FcRazonEmpresa)
                .IsRequired()
                .HasMaxLength(70)
                .IsUnicode(false)
                .HasColumnName("fcRazonEmpresa");
            entity.Property(e => e.FcTelefono1)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono1");
            entity.Property(e => e.FcTelefono2)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono2");
            entity.Property(e => e.FcTelefono3)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono3");
            entity.Property(e => e.FcTelefonoEmpresa)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefonoEmpresa");
        });

        modelBuilder.Entity<Ihss202308>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IHSS2023_08");

            entity.Property(e => e.FcCiudad)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fcCiudad");
            entity.Property(e => e.FcDireccion2)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDireccion2");
            entity.Property(e => e.FcDireccionEmpresa)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDIreccionEmpresa");
            entity.Property(e => e.FcIdentidad)
                .IsRequired()
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("fcIdentidad");
            entity.Property(e => e.FcNombreEmpleado)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpleado");
            entity.Property(e => e.FcNombreEmpresa)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpresa");
            entity.Property(e => e.FcRazonEmpresa)
                .IsRequired()
                .HasMaxLength(70)
                .IsUnicode(false)
                .HasColumnName("fcRazonEmpresa");
            entity.Property(e => e.FcTelefono1)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono1");
            entity.Property(e => e.FcTelefono2)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono2");
            entity.Property(e => e.FcTelefono3)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono3");
            entity.Property(e => e.FcTelefonoEmpresa)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefonoEmpresa");
        });

        modelBuilder.Entity<Ihss202311>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IHSS2023_11");

            entity.Property(e => e.FcCiudad)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fcCiudad");
            entity.Property(e => e.FcDireccion2)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDireccion2");
            entity.Property(e => e.FcDireccionEmpresa)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDIreccionEmpresa");
            entity.Property(e => e.FcIdentidad)
                .IsRequired()
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("fcIdentidad");
            entity.Property(e => e.FcNombreEmpleado)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpleado");
            entity.Property(e => e.FcNombreEmpresa)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpresa");
            entity.Property(e => e.FcRazonEmpresa)
                .IsRequired()
                .HasMaxLength(70)
                .IsUnicode(false)
                .HasColumnName("fcRazonEmpresa");
            entity.Property(e => e.FcTelefono1)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono1");
            entity.Property(e => e.FcTelefono2)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono2");
            entity.Property(e => e.FcTelefono3)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono3");
            entity.Property(e => e.FcTelefonoEmpresa)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefonoEmpresa");
        });

        modelBuilder.Entity<Ihss202401>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IHSS2024_01");

            entity.Property(e => e.FcCiudad)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fcCiudad");
            entity.Property(e => e.FcDireccion2)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDireccion2");
            entity.Property(e => e.FcDireccionEmpresa)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcDIreccionEmpresa");
            entity.Property(e => e.FcIdentidad)
                .IsRequired()
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("fcIdentidad");
            entity.Property(e => e.FcNombreEmpleado)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpleado");
            entity.Property(e => e.FcNombreEmpresa)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreEmpresa");
            entity.Property(e => e.FcRazonEmpresa)
                .IsRequired()
                .HasMaxLength(70)
                .IsUnicode(false)
                .HasColumnName("fcRazonEmpresa");
            entity.Property(e => e.FcTelefono1)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono1");
            entity.Property(e => e.FcTelefono2)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono2");
            entity.Property(e => e.FcTelefono3)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefono3");
            entity.Property(e => e.FcTelefonoEmpresa)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTelefonoEmpresa");
        });

        modelBuilder.Entity<Ihssbasemayo2022>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IHSSBASEMayo_2022");

            entity.Property(e => e.Ciudad)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CIUDAD");
            entity.Property(e => e.Direc)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("DIREC");
            entity.Property(e => e.Identidad)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("IDENTIDAD");
            entity.Property(e => e.Nombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("NOMBRE");
            entity.Property(e => e.Rtn)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("RTN");
            entity.Property(e => e.Trabajo)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("TRABAJO");
        });

        modelBuilder.Entity<InformacionPlacasIp>(entity =>
        {
            entity.HasKey(e => e.FiIdinformacionPlaca);

            entity.ToTable("Informacion_placasIP");

            entity.Property(e => e.FiIdinformacionPlaca).HasColumnName("fiIDInformacionPlaca");
            entity.Property(e => e.FcColor)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fcColor");
            entity.Property(e => e.FcMarca)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fcMarca");
            entity.Property(e => e.FcPlaca)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fcPlaca");
            entity.Property(e => e.FdFechaConsulta)
                .HasColumnType("datetime")
                .HasColumnName("fdFechaConsulta");
            entity.Property(e => e.FiCambioPlacaCantidad).HasColumnName("fiCambioPlacaCantidad");
            entity.Property(e => e.FiCambiodePropietarioCantidad).HasColumnName("fiCambiodePropietarioCantidad");
            entity.Property(e => e.FiTotalCantidad).HasColumnName("fiTotalCantidad");
            entity.Property(e => e.FilDperiodo).HasColumnName("filDPeriodo");
            entity.Property(e => e.FilDtotalMatricula)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("filDTotalMatricula");
            entity.Property(e => e.FnCambioPlacaMonto)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnCambioPlacaMonto");
            entity.Property(e => e.FnCambiodePropietarioMonto)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnCambiodePropietarioMonto");
            entity.Property(e => e.FnContribucionSigloXxicredito)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnContribucionSigloXXICredito");
            entity.Property(e => e.FnContribucionSigloXxidebito)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnContribucionSigloXXIDebito");
            entity.Property(e => e.FnContribucionSigloXxisaldo)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnContribucionSigloXXISaldo");
            entity.Property(e => e.FnMultaMunicipalCredito)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnMultaMunicipalCredito");
            entity.Property(e => e.FnMultaMunicipalDebito)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnMultaMunicipalDebito");
            entity.Property(e => e.FnMultaMunicipalSaldo)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnMultaMunicipalSaldo");
            entity.Property(e => e.FnMultaVehicularCredito)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnMultaVehicularCredito");
            entity.Property(e => e.FnMultaVehicularDebito)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnMultaVehicularDebito");
            entity.Property(e => e.FnMultaVehicularSaldo)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnMultaVehicularSaldo");
            entity.Property(e => e.FnSaldosAnterioresMunicipalesCredito)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnSaldosAnterioresMunicipalesCredito");
            entity.Property(e => e.FnSaldosAnterioresMunicipalesDebito)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnSaldosAnterioresMunicipalesDebito");
            entity.Property(e => e.FnSaldosAnterioresMunicipalesSaldo)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnSaldosAnterioresMunicipalesSaldo");
            entity.Property(e => e.FnSaldosAnterioresSigloXxidebito)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnSaldosAnterioresSigloXXIDebito");
            entity.Property(e => e.FnSaldosAnterioresSiglosXxicredito)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnSaldosAnterioresSiglosXXICredito");
            entity.Property(e => e.FnSaldosAnterioresSiglosXxisaldo)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnSaldosAnterioresSiglosXXISaldo");
            entity.Property(e => e.FnSaldosAnterioresVehicularCredito)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnSaldosAnterioresVehicularCredito");
            entity.Property(e => e.FnSaldosAnterioresVehicularDebito)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnSaldosAnterioresVehicularDebito");
            entity.Property(e => e.FnSaldosAnterioresVehicularSaldo)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnSaldosAnterioresVehicularSaldo");
            entity.Property(e => e.FnTasaMunicipalCredito)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnTasaMunicipalCredito");
            entity.Property(e => e.FnTasaMunicipalDebito)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnTasaMunicipalDebito");
            entity.Property(e => e.FnTasaMunicipalSaldo)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnTasaMunicipalSaldo");
            entity.Property(e => e.FnTasaVehicularCredito)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnTasaVehicularCredito");
            entity.Property(e => e.FnTasaVehicularDebito)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnTasaVehicularDebito");
            entity.Property(e => e.FnTasaVehicularSaldo)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnTasaVehicularSaldo");
            entity.Property(e => e.FnTotalMonto)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnTotalMonto");
            entity.Property(e => e.FnTotalaPagar)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnTotalaPagar");
            entity.Property(e => e.FnValorPlacaCredito)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnValorPlacaCredito");
            entity.Property(e => e.FnValorPlacaDebito)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnValorPlacaDebito");
            entity.Property(e => e.FnValorPlacaSaldo)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnValorPlacaSaldo");
        });

        modelBuilder.Entity<Planilla2010>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("planilla2010");

            entity.Property(e => e.Aldearesi)
                .IsRequired()
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("aldearesi");
            entity.Property(e => e.Caseresi)
                .IsRequired()
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("caseresi");
            entity.Property(e => e.Ciudad)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ciudad");
            entity.Property(e => e.Colonia)
                .IsRequired()
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("colonia");
            entity.Property(e => e.Deparesi)
                .IsRequired()
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("deparesi");
            entity.Property(e => e.Depto)
                .HasColumnType("decimal(3, 0)")
                .HasColumnName("depto");
            entity.Property(e => e.Diremp)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("diremp");
            entity.Property(e => e.Direvieja)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("direvieja");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("email");
            entity.Property(e => e.Fechnaci)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("fechnaci");
            entity.Property(e => e.Fechnaci1)
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasColumnName("fechnaci1");
            entity.Property(e => e.Filtro)
                .HasColumnType("decimal(1, 0)")
                .HasColumnName("filtro");
            entity.Property(e => e.Ide)
                .IsRequired()
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ide");
            entity.Property(e => e.Mestrab)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("mestrab");
            entity.Property(e => e.Muni)
                .HasColumnType("decimal(3, 0)")
                .HasColumnName("muni");
            entity.Property(e => e.Muniresi)
                .IsRequired()
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("muniresi");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(80)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("nombre");
            entity.Property(e => e.Nombrepat)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("nombrepat");
            entity.Property(e => e.Numeafil)
                .IsRequired()
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("numeafil");
            entity.Property(e => e.Numpa)
                .IsRequired()
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("numpa");
            entity.Property(e => e.Raozosoci)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("raozosoci");
            entity.Property(e => e.Salario)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("salario");
            entity.Property(e => e.Sexo)
                .HasColumnType("decimal(10, 0)")
                .HasColumnName("sexo");
            entity.Property(e => e.Telefono)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("telefono");
            entity.Property(e => e.Telemp)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("telemp");
        });

        modelBuilder.Entity<PortalClientesClientesMora>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PortalClientes_ClientesMora");

            entity.Property(e => e.FcNoCliente)
                .HasMaxLength(13)
                .IsUnicode(false)
                .HasColumnName("fcNoCliente");
            entity.Property(e => e.FiDiasMora)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fiDiasMora");
        });

        modelBuilder.Entity<Prestadito>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Prestadito$");

            entity.Property(e => e.F11).HasMaxLength(255);
            entity.Property(e => e.Identidad)
                .HasMaxLength(255)
                .HasColumnName("IDENTIDAD");
            entity.Property(e => e.Lista).HasColumnName("LISTA");
            entity.Property(e => e.SaldoAzteca).HasColumnName("SALDO_AZTECA");
            entity.Property(e => e.Score1).HasColumnName("SCORE -1");
            entity.Property(e => e.Score2).HasColumnName("SCORE -2");
            entity.Property(e => e.Score3).HasColumnName("SCORE -3");
            entity.Property(e => e.Score4).HasColumnName("SCORE -4");
            entity.Property(e => e.Score5).HasColumnName("SCORE -5");
            entity.Property(e => e.ScoreActual).HasColumnName("SCORE_ACTUAL");
            entity.Property(e => e.Telefonos)
                .HasMaxLength(255)
                .HasColumnName("TELEFONOS");
        });

        modelBuilder.Entity<Prestadito2>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Prestadito2");

            entity.Property(e => e.Identidad)
                .HasMaxLength(255)
                .HasColumnName("IDENTIDAD");
            entity.Property(e => e.Lista).HasColumnName("LISTA");
            entity.Property(e => e.Score1).HasColumnName("SCORE -1");
            entity.Property(e => e.Score2).HasColumnName("SCORE -2");
            entity.Property(e => e.Score3).HasColumnName("SCORE -3");
            entity.Property(e => e.Score4).HasColumnName("SCORE -4");
            entity.Property(e => e.Score5).HasColumnName("SCORE -5");
            entity.Property(e => e.ScoreActual).HasColumnName("SCORE_ACTUAL");
            entity.Property(e => e.Telefonos)
                .HasMaxLength(255)
                .HasColumnName("TELEFONOS");
        });

        modelBuilder.Entity<ProcesoArchivosSaf>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ProcesoArchivosSAF");

            entity.Property(e => e.FcNombreArchivo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("fcNombreArchivo");
            entity.Property(e => e.FcUbicacionArchivo)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcUbicacionArchivo");
        });

        modelBuilder.Entity<PruebasCarga>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.ApellidoM)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.ApellidoP)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.DirecionDomicilio)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.Identidad)
                .HasMaxLength(16)
                .IsUnicode(false);
            entity.Property(e => e.Nombre)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.Sucural)
                .HasMaxLength(4)
                .IsUnicode(false);
            entity.Property(e => e.Telefono)
                .HasMaxLength(1)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Requerimiento>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.FcDetalleRequerimiento)
                .IsRequired()
                .HasColumnType("text")
                .HasColumnName("fcDetalleRequerimiento");
            entity.Property(e => e.FcResolucion)
                .IsRequired()
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("fcResolucion");
            entity.Property(e => e.FcTituloRequerimiento)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("fcTituloRequerimiento");
            entity.Property(e => e.FdAltaRequerimiento)
                .HasColumnType("datetime")
                .HasColumnName("fdAltaRequerimiento");
            entity.Property(e => e.FdCierreRequerimiento)
                .HasColumnType("datetime")
                .HasColumnName("fdCierreRequerimiento");
            entity.Property(e => e.FdUltimaActualizacion)
                .HasColumnType("datetime")
                .HasColumnName("fdUltimaActualizacion");
            entity.Property(e => e.FiIdapp).HasColumnName("fiIDApp");
            entity.Property(e => e.FiIdareaAsignada).HasColumnName("fiIDAreaAsignada");
            entity.Property(e => e.FiIdestado).HasColumnName("fiIDEstado");
            entity.Property(e => e.FiIdrequerimiento).HasColumnName("fiIDRequerimiento");
            entity.Property(e => e.FiIdusuario).HasColumnName("fiIDUsuario");
        });

        modelBuilder.Entity<RequerimientoTipoAdjunto>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Requerimiento_Tipo_Adjuntos");

            entity.Property(e => e.FcDescripcionTipoDocumnto)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("fcDescripcionTipoDocumnto");
            entity.Property(e => e.FiIdtipoDocumento).HasColumnName("fiIDTipoDocumento");
        });

        modelBuilder.Entity<RequerimientosAdjunto>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Requerimientos_Adjuntos");

            entity.Property(e => e.FIdiusuario).HasColumnName("fIDIUsuario");
            entity.Property(e => e.FcArchivoAdjunto)
                .IsRequired()
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("fcArchivoAdjunto");
            entity.Property(e => e.FcDescripcionAdjunto)
                .IsRequired()
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("fcDescripcionAdjunto");
            entity.Property(e => e.FcNombreArchivo)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("fcNombreArchivo");
            entity.Property(e => e.FcRutaArchivo)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("fcRutaArchivo");
            entity.Property(e => e.FcTipoArchivo)
                .IsRequired()
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasColumnName("fcTipoArchivo");
            entity.Property(e => e.FcToken)
                .IsRequired()
                .HasMaxLength(512)
                .IsUnicode(false)
                .HasColumnName("fcToken");
            entity.Property(e => e.FcUrl)
                .IsRequired()
                .HasMaxLength(2000)
                .IsUnicode(false)
                .HasColumnName("fcURL");
            entity.Property(e => e.FdFechaRegistro)
                .HasColumnType("datetime")
                .HasColumnName("fdFechaRegistro");
            entity.Property(e => e.FiIdipusuarioSolicitante)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("fiIDIPUsuarioSolicitante");
            entity.Property(e => e.FiIdrequerimiento).HasColumnName("fiIDRequerimiento");
            entity.Property(e => e.FiIdunicoAdjunto).HasColumnName("fiIDUnicoAdjunto");
        });

        modelBuilder.Entity<RequerimientosArea>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Requerimientos_Areas");

            entity.Property(e => e.FcCorreoElectronico)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("fcCorreoElectronico");
            entity.Property(e => e.FcDescripcion)
                .IsRequired()
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasColumnName("fcDescripcion");
            entity.Property(e => e.FiIdarea).HasColumnName("fiIDArea");
            entity.Property(e => e.FiIdusuarioResponsable).HasColumnName("fiIDUsuarioResponsable");
        });

        modelBuilder.Entity<RequerimientosBitacora>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Requerimientos_Bitacora");

            entity.Property(e => e.FIdiusuario).HasColumnName("fIDIUsuario");
            entity.Property(e => e.FcComentario)
                .IsRequired()
                .HasColumnType("text")
                .HasColumnName("fcComentario");
            entity.Property(e => e.FcToken)
                .IsRequired()
                .HasMaxLength(512)
                .IsUnicode(false)
                .HasColumnName("fcToken");
            entity.Property(e => e.FdFechaRegistro)
                .HasColumnType("datetime")
                .HasColumnName("fdFechaRegistro");
            entity.Property(e => e.FiIdapp).HasColumnName("fiIDApp");
            entity.Property(e => e.FiIdipusuarioSolicitante)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("fiIDIPUsuarioSolicitante");
            entity.Property(e => e.FiIdrequerimiento).HasColumnName("fiIDRequerimiento");
        });

        modelBuilder.Entity<RequerimientosBitacora1>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Requerimientos_Bitacoras");

            entity.Property(e => e.FcResolucion)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("fcResolucion");
            entity.Property(e => e.FdBitacora)
                .HasColumnType("datetime")
                .HasColumnName("fdBitacora");
            entity.Property(e => e.FiEstadoActual).HasColumnName("fiEstadoActual");
            entity.Property(e => e.FiEstadoAnterior).HasColumnName("fiEstadoAnterior");
            entity.Property(e => e.FiIdapp).HasColumnName("fiIDApp");
            entity.Property(e => e.FiIdrequerimiento).HasColumnName("fiIDRequerimiento");
            entity.Property(e => e.FiIdusuario).HasColumnName("fiIDUsuario");
        });

        modelBuilder.Entity<RequerimientosBitacorasEstado>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Requerimientos_Bitacoras_Estados");

            entity.Property(e => e.FIdiusuario).HasColumnName("fIDIUsuario");
            entity.Property(e => e.FcToken)
                .IsRequired()
                .HasMaxLength(512)
                .IsUnicode(false)
                .HasColumnName("fcToken");
            entity.Property(e => e.FdFechaFinEstado)
                .HasColumnType("datetime")
                .HasColumnName("fdFechaFinEstado");
            entity.Property(e => e.FdFechaInicioEstado)
                .HasColumnType("datetime")
                .HasColumnName("fdFechaInicioEstado");
            entity.Property(e => e.FiIdapp).HasColumnName("fiIDApp");
            entity.Property(e => e.FiIdestado).HasColumnName("fiIDEstado");
            entity.Property(e => e.FiIdrequerimiento).HasColumnName("fiIDRequerimiento");
        });

        modelBuilder.Entity<RequerimientosCatalogoCategoria>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Requerimientos_Catalogo_Categorias");

            entity.Property(e => e.FcDescripcionCategoria)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("fcDescripcionCategoria");
            entity.Property(e => e.FcToken)
                .IsRequired()
                .HasMaxLength(512)
                .IsUnicode(false)
                .HasColumnName("fcToken");
            entity.Property(e => e.FiIdcategoriaDesarrollo).HasColumnName("fiIDCategoriaDesarrollo");
        });

        modelBuilder.Entity<RequerimientosCatalogoEstado>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Requerimientos_Catalogo_Estados");

            entity.Property(e => e.FcDescripcionEstado)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("fcDescripcionEstado");
            entity.Property(e => e.FcToken)
                .IsRequired()
                .HasMaxLength(512)
                .IsUnicode(false)
                .HasColumnName("fcToken");
            entity.Property(e => e.FiIdestadoRequerimiento).HasColumnName("fiIDEstadoRequerimiento");
        });

        modelBuilder.Entity<RequerimientosCatalogoTipodeRequerimiento>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Requerimientos_Catalogo_TipodeRequerimiento");

            entity.Property(e => e.FcTipoRequerimiento)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("fcTipoRequerimiento");
            entity.Property(e => e.FcToken)
                .IsRequired()
                .HasMaxLength(512)
                .IsUnicode(false)
                .HasColumnName("fcToken");
            entity.Property(e => e.FiIdtipoRequerimiento).HasColumnName("fiIDTipoRequerimiento");
        });

        modelBuilder.Entity<RequerimientosComentario>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Requerimientos_Comentarios");

            entity.Property(e => e.FIdiusuario).HasColumnName("fIDIUsuario");
            entity.Property(e => e.FcComentario)
                .IsRequired()
                .HasColumnType("text")
                .HasColumnName("fcComentario");
            entity.Property(e => e.FcToken)
                .IsRequired()
                .HasMaxLength(512)
                .IsUnicode(false)
                .HasColumnName("fcToken");
            entity.Property(e => e.FdFechaRegistro)
                .HasColumnType("datetime")
                .HasColumnName("fdFechaRegistro");
            entity.Property(e => e.FiIdipusuarioSolicitante)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("fiIDIPUsuarioSolicitante");
            entity.Property(e => e.FiIdrequerimiento).HasColumnName("fiIDRequerimiento");
        });

        modelBuilder.Entity<RequerimientosContadore>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Requerimientos_Contadores");

            entity.Property(e => e.FcDescripcionContador)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fcDescripcionContador");
            entity.Property(e => e.FcToken)
                .IsRequired()
                .HasMaxLength(512)
                .IsUnicode(false)
                .HasColumnName("fcToken");
            entity.Property(e => e.FiIdcontador).HasColumnName("fiIDContador");
            entity.Property(e => e.FiIdnumeroSiguiente).HasColumnName("fiIDNumeroSiguiente");
        });

        modelBuilder.Entity<RequerimientosEstado>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Requerimientos_Estados");

            entity.Property(e => e.FcClaseColor)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fcClaseColor");
            entity.Property(e => e.FcDescripcionEstado)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fcDescripcionEstado");
            entity.Property(e => e.FiIdestado).HasColumnName("fiIDEstado");
        });

        modelBuilder.Entity<RequerimientosMaestro>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Requerimientos_Maestro");

            entity.Property(e => e.FcDescripcionRequerimiento)
                .IsRequired()
                .HasColumnType("text")
                .HasColumnName("fcDescripcionRequerimiento");
            entity.Property(e => e.FcIpultimaModificacion)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("fcIPUltimaModificacion");
            entity.Property(e => e.FcTituloRequerimiento)
                .IsRequired()
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("fcTituloRequerimiento");
            entity.Property(e => e.FcToken)
                .IsRequired()
                .HasMaxLength(512)
                .IsUnicode(false)
                .HasColumnName("fcToken");
            entity.Property(e => e.FdFechaAsignacion)
                .HasColumnType("datetime")
                .HasColumnName("fdFechaAsignacion");
            entity.Property(e => e.FdFechaCreacion)
                .HasColumnType("datetime")
                .HasColumnName("fdFechaCreacion");
            entity.Property(e => e.FdFechaUltimaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fdFechaUltimaModificacion");
            entity.Property(e => e.FdFechadeCierre)
                .HasColumnType("datetime")
                .HasColumnName("fdFechadeCierre");
            entity.Property(e => e.FiCategoriadeDesarrollo).HasColumnName("fiCategoriadeDesarrollo");
            entity.Property(e => e.FiIdareaSolicitante).HasColumnName("fiIDAreaSolicitante");
            entity.Property(e => e.FiIdestadoRequerimiento).HasColumnName("fiIDEstadoRequerimiento");
            entity.Property(e => e.FiIdipusuarioSolicitante)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("fiIDIPUsuarioSolicitante");
            entity.Property(e => e.FiIdrequerimiento).HasColumnName("fiIDRequerimiento");
            entity.Property(e => e.FiIdusuarioAsignado).HasColumnName("fiIDUsuarioAsignado");
            entity.Property(e => e.FiIdusuarioSolicitante).HasColumnName("fiIDUsuarioSolicitante");
            entity.Property(e => e.FiIdusuarioUltimaModificacion).HasColumnName("fiIDUsuarioUltimaModificacion");
            entity.Property(e => e.FiTiempodeDesarrollo).HasColumnName("fiTiempodeDesarrollo");
            entity.Property(e => e.FiTipoRequerimiento).HasColumnName("fiTipoRequerimiento");
            entity.Property(e => e.FnValoracionRequerimiento)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fnValoracionRequerimiento");
        });

        modelBuilder.Entity<RequerimientosUsuario>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Requerimientos_Usuarios");

            entity.Property(e => e.FcCorreoElectronico)
                .IsRequired()
                .HasMaxLength(4000)
                .IsUnicode(false)
                .HasColumnName("fcCorreoElectronico");
            entity.Property(e => e.FcNombreCompleto)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("fcNombreCompleto");
            entity.Property(e => e.FcNombreCorto)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("fcNombreCorto");
            entity.Property(e => e.FcPassword)
                .IsRequired()
                .HasMaxLength(4000)
                .IsUnicode(false)
                .HasColumnName("fcPassword");
            entity.Property(e => e.FcToken)
                .IsRequired()
                .HasMaxLength(512)
                .IsUnicode(false)
                .HasColumnName("fcToken");
            entity.Property(e => e.FcUsuarioAcceso)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fcUsuarioAcceso");
            entity.Property(e => e.FiIddepartamento).HasColumnName("fiIDDepartamento");
            entity.Property(e => e.FiIdtipoUsuario).HasColumnName("fiIDTipoUsuario");
            entity.Property(e => e.FiIdusuario).HasColumnName("fiIDUsuario");
        });

        modelBuilder.Entity<RpaTotal>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RpaTotal$");

            entity.Property(e => e.Celularemp)
                .HasMaxLength(255)
                .HasColumnName("CELULAREMP");
            entity.Property(e => e.Direc)
                .HasMaxLength(255)
                .HasColumnName("DIREC");
            entity.Property(e => e.Direccione)
                .HasMaxLength(255)
                .HasColumnName("DIRECCIONE");
            entity.Property(e => e.Empresa)
                .HasMaxLength(255)
                .HasColumnName("EMPRESA");
            entity.Property(e => e.Identidad)
                .HasMaxLength(255)
                .HasColumnName("IDENTIDAD");
            entity.Property(e => e.Nombrecomp)
                .HasMaxLength(255)
                .HasColumnName("NOMBRECOMP");
            entity.Property(e => e.Razon)
                .HasMaxLength(255)
                .HasColumnName("RAZON");
            entity.Property(e => e.Rtn)
                .HasMaxLength(255)
                .HasColumnName("RTN");
            entity.Property(e => e.Telefono)
                .HasMaxLength(255)
                .HasColumnName("TELEFONO");
            entity.Property(e => e.Telefonoem)
                .HasMaxLength(255)
                .HasColumnName("TELEFONOEM");
        });

        modelBuilder.Entity<Sheet1>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Sheet1$");

            entity.Property(e => e.NombreDeLaEmpresa)
                .HasMaxLength(255)
                .HasColumnName("Nombre de la empresa");
            entity.Property(e => e.RazonDeLaEmpresa)
                .HasMaxLength(255)
                .HasColumnName("Razon de la empresa");
        });

        modelBuilder.Entity<SieavancesCc>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("SIEAvancesCC");

            entity.Property(e => e.FcSegmento)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fcSegmento");
            entity.Property(e => e.FiMeta)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fiMeta");
            entity.Property(e => e.FiRecuperado)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fiRecuperado");
        });

        modelBuilder.Entity<SieavancesCcme>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("SIEAvancesCCMes");

            entity.Property(e => e.FcSegmento)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fcSegmento");
            entity.Property(e => e.FiMeta)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fiMeta");
            entity.Property(e => e.FiRecuperado)
                .HasColumnType("decimal(13, 2)")
                .HasColumnName("fiRecuperado");
        });

        modelBuilder.Entity<SrcCliente>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("SRC_Clientes");

            entity.Property(e => e.FcCentrodeCosto)
                .IsRequired()
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasColumnName("fcCentrodeCosto");
            entity.Property(e => e.FcCiudad)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("fcCiudad");
            entity.Property(e => e.FcColonia)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("fcColonia");
            entity.Property(e => e.FcDireccion)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("fcDireccion");
            entity.Property(e => e.FcGestorCobros)
                .IsRequired()
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("fcGestorCobros");
            entity.Property(e => e.FcIdcliente)
                .IsRequired()
                .HasMaxLength(11)
                .IsUnicode(false)
                .HasColumnName("fcIDCliente");
            entity.Property(e => e.FcIdentidad)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false)
                .HasColumnName("fcIdentidad");
            entity.Property(e => e.FcNombreSaf)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("fcNombreSAF");
            entity.Property(e => e.FcOficial)
                .IsRequired()
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("fcOficial");
            entity.Property(e => e.FcTelefonos)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fcTelefonos");
            entity.Property(e => e.FcTransaccionUltimoAbono)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("fcTransaccionUltimoAbono");
            entity.Property(e => e.FdUltimaGestion)
                .HasColumnType("datetime")
                .HasColumnName("fdUltimaGestion");
            entity.Property(e => e.FdUltimoAbono)
                .HasColumnType("datetime")
                .HasColumnName("fdUltimoAbono");
            entity.Property(e => e.FiCuotasAtraso).HasColumnName("fiCuotasAtraso");
            entity.Property(e => e.FiCuotasPagadas).HasColumnName("fiCuotasPagadas");
            entity.Property(e => e.FiCuotasPendientes).HasColumnName("fiCuotasPendientes");
            entity.Property(e => e.FiDiasAtraso).HasColumnName("fiDiasAtraso");
            entity.Property(e => e.FnCapitalOtorgado)
                .HasColumnType("decimal(14, 2)")
                .HasColumnName("fnCapitalOtorgado");
            entity.Property(e => e.FnCapitalVencido)
                .HasColumnType("decimal(14, 2)")
                .HasColumnName("fnCapitalVencido");
            entity.Property(e => e.FnInteresesVencidos)
                .HasColumnType("decimal(14, 2)")
                .HasColumnName("fnInteresesVencidos");
            entity.Property(e => e.FnRecargos)
                .HasColumnType("decimal(14, 2)")
                .HasColumnName("fnRecargos");
            entity.Property(e => e.FnSaldoActual)
                .HasColumnType("decimal(14, 2)")
                .HasColumnName("fnSaldoActual");
            entity.Property(e => e.FnSaldoPonerAlDia)
                .HasColumnType("decimal(14, 2)")
                .HasColumnName("fnSaldoPonerAlDia");
            entity.Property(e => e.FnTotalCuenta)
                .HasColumnType("decimal(14, 2)")
                .HasColumnName("fnTotalCuenta");
            entity.Property(e => e.FnValorCuota)
                .HasColumnType("decimal(14, 2)")
                .HasColumnName("fnValorCuota");
        });

        modelBuilder.Entity<TblCneMCensoNacional>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TBL_CNE_M_CENSO_NACIONAL");

            entity.Property(e => e.CodigoAldea).HasColumnName("CODIGO_ALDEA");
            entity.Property(e => e.CodigoArea).HasColumnName("CODIGO_AREA");
            entity.Property(e => e.CodigoCentroVotacion).HasColumnName("CODIGO_CENTRO_VOTACION");
            entity.Property(e => e.CodigoDepartamentoDomicilio).HasColumnName("CODIGO_DEPARTAMENTO_DOMICILIO");
            entity.Property(e => e.CodigoEstadoTarjeta)
                .HasMaxLength(3)
                .HasColumnName("CODIGO_ESTADO_TARJETA");
            entity.Property(e => e.CodigoHabilInhabil)
                .HasMaxLength(255)
                .HasColumnName("CODIGO_HABIL_INHABIL");
            entity.Property(e => e.CodigoLugarPoblado).HasColumnName("CODIGO_LUGAR_POBLADO");
            entity.Property(e => e.CodigoMunicipioDomicilio).HasColumnName("CODIGO_MUNICIPIO_DOMICILIO");
            entity.Property(e => e.CodigoSectorElectoral).HasColumnName("CODIGO_SECTOR_ELECTORAL");
            entity.Property(e => e.CodigoSexo).HasColumnName("CODIGO_SEXO");
            entity.Property(e => e.FechaNacimiento)
                .HasMaxLength(10)
                .HasColumnName("FECHA_NACIMIENTO");
            entity.Property(e => e.NumeroIdentidad)
                .IsRequired()
                .HasMaxLength(13)
                .HasColumnName("NUMERO_IDENTIDAD");
            entity.Property(e => e.NumeroLinea).HasColumnName("NUMERO_LINEA");
            entity.Property(e => e.NumeroMesa).HasColumnName("NUMERO_MESA");
            entity.Property(e => e.PrimerApellido)
                .HasMaxLength(25)
                .HasColumnName("PRIMER_APELLIDO");
            entity.Property(e => e.PrimerNombre)
                .HasMaxLength(25)
                .HasColumnName("PRIMER_NOMBRE");
            entity.Property(e => e.SegundoApellido)
                .HasMaxLength(25)
                .HasColumnName("SEGUNDO_APELLIDO");
            entity.Property(e => e.SegundoNombre)
                .HasMaxLength(25)
                .HasColumnName("SEGUNDO_NOMBRE");
        });

        modelBuilder.Entity<TblCneRCodigosHabiInha>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TBL_CNE_R_CODIGOS_HABI_INHA");

            entity.Property(e => e.CodigoHabilInhabil)
                .IsRequired()
                .HasMaxLength(3)
                .HasColumnName("CODIGO_HABIL_INHABIL");
            entity.Property(e => e.DescHabilInhabil)
                .HasMaxLength(50)
                .HasColumnName("DESC_HABIL_INHABIL");
        });

        modelBuilder.Entity<TblCneREstatusIdentidad>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TBL_CNE_R_ESTATUS_IDENTIDAD");

            entity.Property(e => e.CodigoEstadoTarjeta)
                .IsRequired()
                .HasMaxLength(3)
                .HasColumnName("CODIGO_ESTADO_TARJETA");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .HasColumnName("DESCRIPCION");
        });

        modelBuilder.Entity<TblCneRSexo>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TBL_CNE_R_SEXO");

            entity.Property(e => e.CodigoSexo).HasColumnName("CODIGO_SEXO");
            entity.Property(e => e.DescripcionSexo)
                .HasMaxLength(20)
                .HasColumnName("DESCRIPCION_SEXO");
        });

        modelBuilder.Entity<TblDpgeAAldea>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TBL_DPGE_A_ALDEA");

            entity.Property(e => e.CodigoAldea).HasColumnName("CODIGO_ALDEA");
            entity.Property(e => e.CodigoDepartamento).HasColumnName("CODIGO_DEPARTAMENTO");
            entity.Property(e => e.CodigoMunicipio).HasColumnName("CODIGO_MUNICIPIO");
            entity.Property(e => e.NombreAldea)
                .HasMaxLength(255)
                .HasColumnName("NOMBRE_ALDEA");
        });

        modelBuilder.Entity<TblDpgeADepartamento>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TBL_DPGE_A_DEPARTAMENTO");

            entity.Property(e => e.CodigoDepartamento).HasColumnName("CODIGO_DEPARTAMENTO");
            entity.Property(e => e.NombreDepartamento)
                .HasMaxLength(50)
                .HasColumnName("NOMBRE_DEPARTAMENTO");
        });

        modelBuilder.Entity<TblDpgeALugarPoblado>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TBL_DPGE_A_LUGAR_POBLADO");

            entity.Property(e => e.CodigoAldea).HasColumnName("CODIGO_ALDEA");
            entity.Property(e => e.CodigoArea).HasColumnName("CODIGO_AREA");
            entity.Property(e => e.CodigoDepartamento).HasColumnName("CODIGO_DEPARTAMENTO");
            entity.Property(e => e.CodigoLugarPoblado).HasColumnName("CODIGO_LUGAR_POBLADO");
            entity.Property(e => e.CodigoMunicipio).HasColumnName("CODIGO_MUNICIPIO");
            entity.Property(e => e.CodigoSectorElectoral).HasColumnName("CODIGO_SECTOR_ELECTORAL");
            entity.Property(e => e.NombreLugarPoblado)
                .HasMaxLength(255)
                .HasColumnName("NOMBRE_LUGAR_POBLADO");
        });

        modelBuilder.Entity<TblDpgeAMunicipio>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TBL_DPGE_A_MUNICIPIO");

            entity.Property(e => e.CodigoDepartamento).HasColumnName("CODIGO_DEPARTAMENTO");
            entity.Property(e => e.CodigoMunicipio).HasColumnName("CODIGO_MUNICIPIO");
            entity.Property(e => e.NombreMunicipio)
                .HasMaxLength(50)
                .HasColumnName("NOMBRE_MUNICIPIO");
        });

        modelBuilder.Entity<TblDpgeMCentroVotacion>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TBL_DPGE_M_CENTRO_VOTACION");

            entity.Property(e => e.CodigoArea).HasColumnName("CODIGO_AREA");
            entity.Property(e => e.CodigoCentroVotacion).HasColumnName("CODIGO_CENTRO_VOTACION");
            entity.Property(e => e.CodigoDepartamento).HasColumnName("CODIGO_DEPARTAMENTO");
            entity.Property(e => e.CodigoMunicipio).HasColumnName("CODIGO_MUNICIPIO");
            entity.Property(e => e.CodigoSectorElectoral).HasColumnName("CODIGO_SECTOR_ELECTORAL");
            entity.Property(e => e.NombreCentro)
                .HasMaxLength(255)
                .HasColumnName("NOMBRE_CENTRO");
        });

        modelBuilder.Entity<TblDpgeMSectorElectoral>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TBL_DPGE_M_SECTOR_ELECTORAL");

            entity.Property(e => e.CodigoArea).HasColumnName("CODIGO_AREA");
            entity.Property(e => e.CodigoDepartamento).HasColumnName("CODIGO_DEPARTAMENTO");
            entity.Property(e => e.CodigoMunicipio).HasColumnName("CODIGO_MUNICIPIO");
            entity.Property(e => e.CodigoSectorElectoral).HasColumnName("CODIGO_SECTOR_ELECTORAL");
            entity.Property(e => e.NombreSectorElectoral)
                .HasMaxLength(255)
                .HasColumnName("NOMBRE_SECTOR_ELECTORAL");
        });

        modelBuilder.Entity<TblDpgeRArea>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TBL_DPGE_R_AREA");

            entity.Property(e => e.CodigoArea).HasColumnName("CODIGO_AREA");
            entity.Property(e => e.DescripcionArea)
                .HasMaxLength(20)
                .HasColumnName("DESCRIPCION_AREA");
        });

        modelBuilder.Entity<Tdato>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Tdatos$");

            entity.Property(e => e.Ciudad)
                .HasMaxLength(255)
                .HasColumnName("CIUDAD");
            entity.Property(e => e.Direc2)
                .HasMaxLength(255)
                .HasColumnName("DIREC2");
            entity.Property(e => e.Diremp)
                .HasMaxLength(255)
                .HasColumnName("DIREMP");
            entity.Property(e => e.Empresa)
                .HasMaxLength(255)
                .HasColumnName("EMPRESA");
            entity.Property(e => e.Ident)
                .HasMaxLength(255)
                .HasColumnName("IDENT");
            entity.Property(e => e.Movil)
                .HasMaxLength(255)
                .HasColumnName("MOVIL");
            entity.Property(e => e.Nombre)
                .HasMaxLength(255)
                .HasColumnName("NOMBRE");
            entity.Property(e => e.Razon)
                .HasMaxLength(255)
                .HasColumnName("RAZON");
            entity.Property(e => e.Rtn)
                .HasMaxLength(255)
                .HasColumnName("RTN");
            entity.Property(e => e.Tel)
                .HasMaxLength(255)
                .HasColumnName("TEL");
            entity.Property(e => e.Telemp)
                .HasMaxLength(255)
                .HasColumnName("TELEMP");
        });

        modelBuilder.Entity<Telefono>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.FcIdentidad)
                .HasMaxLength(255)
                .HasColumnName("fcIdentidad");
            entity.Property(e => e.FcTelefonos)
                .HasMaxLength(255)
                .HasColumnName("fcTelefonos");
        });

        modelBuilder.Entity<TutorialesAccesosArea>(entity =>
        {
            entity.HasKey(e => e.FiIdacceso).HasName("PK__Tutorial__1EBCEE211BE8C203");

            entity.ToTable("Tutoriales_AccesosAreas");

            entity.Property(e => e.FiIdacceso).HasColumnName("fiIDAcceso");
            entity.Property(e => e.FiIdarea).HasColumnName("fiIDArea");
            entity.Property(e => e.FiIdempleado).HasColumnName("fiIDEmpleado");
        });

        modelBuilder.Entity<TutorialesVideo>(entity =>
        {
            entity.HasKey(e => e.FiIdvideo).HasName("PK__Tutorial__52537B6AAF98C4A4");

            entity.ToTable("Tutoriales_Videos");

            entity.Property(e => e.FiIdvideo).HasColumnName("fiIDVideo");
            entity.Property(e => e.FbActivo).HasColumnName("fbActivo");
            entity.Property(e => e.FcDescripcionVideo)
                .HasMaxLength(100)
                .HasColumnName("fcDescripcionVideo");
            entity.Property(e => e.FcNombreArchivo)
                .HasMaxLength(200)
                .HasColumnName("fcNombreArchivo");
            entity.Property(e => e.FcUrl)
                .HasMaxLength(200)
                .HasColumnName("fcUrl");
            entity.Property(e => e.FcUsuarioCreador)
                .HasMaxLength(20)
                .HasColumnName("fcUsuarioCreador");
            entity.Property(e => e.FdFechaCreado)
                .HasColumnType("datetime")
                .HasColumnName("fdFechaCreado");
            entity.Property(e => e.FiIdarea).HasColumnName("fiIDArea");
            entity.Property(e => e.FiOrden).HasColumnName("fiOrden");
        });

        modelBuilder.Entity<Xbase2019>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("xbase2019$");

            entity.Property(e => e.Aldea)
                .HasMaxLength(255)
                .HasColumnName("ALDEA");
            entity.Property(e => e.Avenida)
                .HasMaxLength(255)
                .HasColumnName("AVENIDA");
            entity.Property(e => e.Calle)
                .HasMaxLength(255)
                .HasColumnName("CALLE");
            entity.Property(e => e.Caserio)
                .HasMaxLength(255)
                .HasColumnName("CASERIO");
            entity.Property(e => e.Colonia)
                .HasMaxLength(255)
                .HasColumnName("COLONIA");
            entity.Property(e => e.Departamen)
                .HasMaxLength(255)
                .HasColumnName("DEPARTAMEN");
            entity.Property(e => e.Direccion)
                .HasMaxLength(255)
                .HasColumnName("DIRECCION");
            entity.Property(e => e.Empleado)
                .HasMaxLength(255)
                .HasColumnName("EMPLEADO");
            entity.Property(e => e.Empresa)
                .HasMaxLength(255)
                .HasColumnName("EMPRESA");
            entity.Property(e => e.Ident)
                .HasMaxLength(255)
                .HasColumnName("IDENT");
            entity.Property(e => e.Municipio)
                .HasMaxLength(255)
                .HasColumnName("MUNICIPIO");
            entity.Property(e => e.Rtn)
                .HasMaxLength(255)
                .HasColumnName("RTN");
            entity.Property(e => e.Salario).HasColumnName("SALARIO");
            entity.Property(e => e.Tel1)
                .HasMaxLength(255)
                .HasColumnName("TEL1");
            entity.Property(e => e.Tel2)
                .HasMaxLength(255)
                .HasColumnName("TEL2");
            entity.Property(e => e.Tel3)
                .HasMaxLength(255)
                .HasColumnName("TEL3");
            entity.Property(e => e.TelPerson)
                .HasMaxLength(255)
                .HasColumnName("TEL_PERSON");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}