// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Jojo.Entities.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace Jojo.DataAccess.Context
{
    public partial class Db_KujocenterContext : DbContext
    {
        public Db_KujocenterContext()
        {
        }

        public Db_KujocenterContext(DbContextOptions<Db_KujocenterContext> options)
            : base(options)
        {
        }

        public virtual DbSet<tbCategorias> tbCategorias { get; set; }
        public virtual DbSet<tbClientes> tbClientes { get; set; }
        public virtual DbSet<tbDepartamentos> tbDepartamentos { get; set; }
        public virtual DbSet<tbEmpleados> tbEmpleados { get; set; }
        public virtual DbSet<tbEstadosCiviles> tbEstadosCiviles { get; set; }
        public virtual DbSet<tbFacturas> tbFacturas { get; set; }
        public virtual DbSet<tbFacturasDetalles> tbFacturasDetalles { get; set; }
        public virtual DbSet<tbMunicipios> tbMunicipios { get; set; }
        public virtual DbSet<tbPantallas> tbPantallas { get; set; }
        public virtual DbSet<tbPantallasPorRol> tbPantallasPorRol { get; set; }
        public virtual DbSet<tbProductos> tbProductos { get; set; }
        public virtual DbSet<tbProveedores> tbProveedores { get; set; }
        public virtual DbSet<tbRoles> tbRoles { get; set; }
        public virtual DbSet<tbSucursales> tbSucursales { get; set; }
        public virtual DbSet<tbUsuarios> tbUsuarios { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Modern_Spanish_CI_AS");

            modelBuilder.Entity<tbCategorias>(entity =>
            {
                entity.HasKey(e => e.cate_Id)
                    .HasName("PK_kujo_tb_Categorias_cate_Id");

                entity.ToTable("tbCategorias", "kujo");

                entity.Property(e => e.cate_Descripcion).HasMaxLength(100);

                entity.Property(e => e.cate_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.cate_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.cate_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.cate_UserCreaNavigation)
                    .WithMany(p => p.tbCategoriascate_UserCreaNavigation)
                    .HasForeignKey(d => d.cate_UserCrea)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_kujo_tbCategorias_UserCrea_usua_Id");

                entity.HasOne(d => d.cate_UserModificaNavigation)
                    .WithMany(p => p.tbCategoriascate_UserModificaNavigation)
                    .HasForeignKey(d => d.cate_UserModifica)
                    .HasConstraintName("FK_kujo_tbCategorias_UserModifica_usua_Id");
            });

            modelBuilder.Entity<tbClientes>(entity =>
            {
                entity.HasKey(e => e.clie_Id)
                    .HasName("PK_kujo_tbClientes_clie_Id");

                entity.ToTable("tbClientes", "kujo");

                entity.Property(e => e.clie_ApellIdos)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.clie_Direccion).HasMaxLength(200);

                entity.Property(e => e.clie_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.clie_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.clie_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.clie_FechaNacimiento).HasColumnType("date");

                entity.Property(e => e.clie_Nombres)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.clie_Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.clie_Telefeno)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.HasOne(d => d.clie_UserCreaNavigation)
                    .WithMany(p => p.tbClientesclie_UserCreaNavigation)
                    .HasForeignKey(d => d.clie_UserCrea)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_kujo_tbClientes_UserCrea_usua_Id");

                entity.HasOne(d => d.clie_UserModificaNavigation)
                    .WithMany(p => p.tbClientesclie_UserModificaNavigation)
                    .HasForeignKey(d => d.clie_UserModifica)
                    .HasConstraintName("FK_kujo_tbClientes_UserModifica_usua_Id");

                entity.HasOne(d => d.estc)
                    .WithMany(p => p.tbClientes)
                    .HasForeignKey(d => d.estc_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_kujo_tbClientes_tbEstadosCiviles_eciv_Id");

                entity.HasOne(d => d.muni)
                    .WithMany(p => p.tbClientes)
                    .HasForeignKey(d => d.muni_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_kujo_tbClientes_tbMunicipios_muni_Id");
            });

            modelBuilder.Entity<tbDepartamentos>(entity =>
            {
                entity.HasKey(e => e.dept_Id)
                    .HasName("PK_gral_tbDepartamentos_dept_Id");

                entity.ToTable("tbDepartamentos", "gral");

                entity.HasIndex(e => e.dept_Descripcion, "UQ_gral_tbDepartamentos_dept_Descripcion")
                    .IsUnique();

                entity.Property(e => e.dept_Id)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.dept_Descripcion)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.dept_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.dept_FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.dept_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.dept_UserCreaNavigation)
                    .WithMany(p => p.tbDepartamentosdept_UserCreaNavigation)
                    .HasForeignKey(d => d.dept_UserCrea)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_gral_tbDepartamentos_dept_UserCrea_acce_tbUsuarios_user_Id");

                entity.HasOne(d => d.dept_UserModificaNavigation)
                    .WithMany(p => p.tbDepartamentosdept_UserModificaNavigation)
                    .HasForeignKey(d => d.dept_UserModifica)
                    .HasConstraintName("FK_gral_tbDepartamentos_dept_UserModifica_acce_tbUsuarios_user_Id");
            });

            modelBuilder.Entity<tbEmpleados>(entity =>
            {
                entity.HasKey(e => e.empl_Id)
                    .HasName("PK_kujo_tbEmpleados_empl_Id");

                entity.ToTable("tbEmpleados", "kujo");

                entity.Property(e => e.empl_ApellIdos)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.empl_Direccion).HasMaxLength(200);

                entity.Property(e => e.empl_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.empl_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.empl_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.empl_FechaNacimiento).HasColumnType("date");

                entity.Property(e => e.empl_Nombres)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.empl_Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.empl_Telefeno)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.HasOne(d => d.empl_UserCreaNavigation)
                    .WithMany(p => p.tbEmpleadosempl_UserCreaNavigation)
                    .HasForeignKey(d => d.empl_UserCrea)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_kujo_tbEmpleados_UserCrea_usua_Id");

                entity.HasOne(d => d.empl_UserModificaNavigation)
                    .WithMany(p => p.tbEmpleadosempl_UserModificaNavigation)
                    .HasForeignKey(d => d.empl_UserModifica)
                    .HasConstraintName("FK_kujo_tbEmpleados_UserModifica_usua_Id");

                entity.HasOne(d => d.estc)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.estc_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_kujo_tbEmpleados_tbEstadosCiviles_estc_Id");

                entity.HasOne(d => d.muni)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.muni_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_kujo_tbEmpleados_tbMunicipios_muni_Id");

                entity.HasOne(d => d.sucu)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.sucu_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_kujo_tbEmpleados_tbSucursales_sucu_Id");
            });

            modelBuilder.Entity<tbEstadosCiviles>(entity =>
            {
                entity.HasKey(e => e.estc_Id)
                    .HasName("PK_gral_tbEstadosCiviles_estc_Id");

                entity.ToTable("tbEstadosCiviles", "gral");

                entity.HasIndex(e => e.estc_Descripcion, "UQ_gral_tbEstadosCiviles_estc_Descripcion")
                    .IsUnique();

                entity.Property(e => e.estc_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.estc_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.estc_FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.estc_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.estc_UserCreaNavigation)
                    .WithMany(p => p.tbEstadosCivilesestc_UserCreaNavigation)
                    .HasForeignKey(d => d.estc_UserCrea)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_gral_tbEstadosCiviles_estc_UserCrea_acce_tbUsuarios_user_Id");

                entity.HasOne(d => d.estc_UserModificaNavigation)
                    .WithMany(p => p.tbEstadosCivilesestc_UserModificaNavigation)
                    .HasForeignKey(d => d.estc_UserModifica)
                    .HasConstraintName("FK_gral_tbEstadosCiviles_estc_UserModifica_acce_tbUsuarios_user_Id");
            });

            modelBuilder.Entity<tbFacturas>(entity =>
            {
                entity.HasKey(e => e.fact_Id)
                    .HasName("PK_kujo_tbFacturas_fact_Id");

                entity.ToTable("tbFacturas", "kujo");

                entity.Property(e => e.fact_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.fact_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.fact_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.fact_estadocompra)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.fact_fechacompra)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.clie)
                    .WithMany(p => p.tbFacturas)
                    .HasForeignKey(d => d.clie_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_kujo_tbFacturas_tbClientes_clie_Id");

                entity.HasOne(d => d.empl)
                    .WithMany(p => p.tbFacturas)
                    .HasForeignKey(d => d.empl_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_kujo_tbFacturas_tbEmpleados_empl_Id");

                entity.HasOne(d => d.fact_UserCreaNavigation)
                    .WithMany(p => p.tbFacturasfact_UserCreaNavigation)
                    .HasForeignKey(d => d.fact_UserCrea)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_kujo_tbFacturas_UserCrea_usua_Id");

                entity.HasOne(d => d.fact_UserModificaNavigation)
                    .WithMany(p => p.tbFacturasfact_UserModificaNavigation)
                    .HasForeignKey(d => d.fact_UserModifica)
                    .HasConstraintName("FK_kujo_tbFacturas_UserModifica_usua_Id");
            });

            modelBuilder.Entity<tbFacturasDetalles>(entity =>
            {
                entity.HasKey(e => e.facd_Id)
                    .HasName("PK_kujo_tbFacturasDetalles_facd_Id");

                entity.ToTable("tbFacturasDetalles", "kujo");

                entity.Property(e => e.facd_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.facd_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.facd_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.facd_PrecioUnitario).HasColumnType("decimal(18, 2)");

                entity.HasOne(d => d.facd_UserCreaNavigation)
                    .WithMany(p => p.tbFacturasDetallesfacd_UserCreaNavigation)
                    .HasForeignKey(d => d.facd_UserCrea)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_kujo_tbFacturasDetalles_UserCrea_usua_Id");

                entity.HasOne(d => d.facd_UserModificaNavigation)
                    .WithMany(p => p.tbFacturasDetallesfacd_UserModificaNavigation)
                    .HasForeignKey(d => d.facd_UserModifica)
                    .HasConstraintName("FK_kujo_tbFacturasDetalles_UserModifica_usua_Id");

                entity.HasOne(d => d.fact)
                    .WithMany(p => p.tbFacturasDetalles)
                    .HasForeignKey(d => d.fact_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_kujo_tbFacturasDetalles_tb_Facturas_fact_Id");
            });

            modelBuilder.Entity<tbMunicipios>(entity =>
            {
                entity.HasKey(e => e.muni_Id)
                    .HasName("PK_gral_tbMunicipios_muni_Id");

                entity.ToTable("tbMunicipios", "gral");

                entity.Property(e => e.muni_Id)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.dept_Id)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.muni_Descripcion)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.muni_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.muni_FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.muni_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.dept)
                    .WithMany(p => p.tbMunicipios)
                    .HasForeignKey(d => d.dept_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_gral_tbMunicipios_dept_Id");

                entity.HasOne(d => d.muni_UserCreaNavigation)
                    .WithMany(p => p.tbMunicipiosmuni_UserCreaNavigation)
                    .HasForeignKey(d => d.muni_UserCrea)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_gral_tbMunicipios_muni_UserCrea_acce_tbUsuarios_user_Id");

                entity.HasOne(d => d.muni_UserModificaNavigation)
                    .WithMany(p => p.tbMunicipiosmuni_UserModificaNavigation)
                    .HasForeignKey(d => d.muni_UserModifica)
                    .HasConstraintName("FK_gral_tbMunicipios_muni_UserModifica_acce_tbUsuarios_user_Id");
            });

            modelBuilder.Entity<tbPantallas>(entity =>
            {
                entity.HasKey(e => e.pant_Id)
                    .HasName("PK_acce_tbPantallas_pant_Id");

                entity.ToTable("tbPantallas", "acce");

                entity.HasIndex(e => e.pant_Identificador, "UQ_acce_tbPantallas_pant_Identificador")
                    .IsUnique();

                entity.HasIndex(e => e.pant_Nombre, "UQ_acce_tbPantallas_pant_Nombre")
                    .IsUnique();

                entity.HasIndex(e => e.pant_href, "UQ_acce_tbPantallas_pant_href")
                    .IsUnique();

                entity.Property(e => e.pant_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.pant_FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.pant_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.pant_Identificador)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.pant_Nombre)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.pant_href)
                    .IsRequired()
                    .HasMaxLength(70);

                entity.HasOne(d => d.pant_UserCreaNavigation)
                    .WithMany(p => p.tbPantallaspant_UserCreaNavigation)
                    .HasForeignKey(d => d.pant_UserCrea)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_kujo_tbPantallas_pant_UserCrea_acce_tbUsuarios_user_Id");

                entity.HasOne(d => d.pant_UserModificaNavigation)
                    .WithMany(p => p.tbPantallaspant_UserModificaNavigation)
                    .HasForeignKey(d => d.pant_UserModifica)
                    .HasConstraintName("FK_kujo_tbPantallas_pant_UserModifica_acce_tbUsuarios_user_Id");
            });

            modelBuilder.Entity<tbPantallasPorRol>(entity =>
            {
                entity.HasKey(e => e.pantrol_Id)
                    .HasName("PK_acce_tbPantallasPorRol_pantrol_Id");

                entity.ToTable("tbPantallasPorRol", "acce");

                entity.Property(e => e.pantrol_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.pantrol_FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.pantrol_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.pant)
                    .WithMany(p => p.tbPantallasPorRol)
                    .HasForeignKey(d => d.pant_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_acce_tbPantallasPorRol_tbPantallas_pant_Id");

                entity.HasOne(d => d.pantrol_UserCreaNavigation)
                    .WithMany(p => p.tbPantallasPorRolpantrol_UserCreaNavigation)
                    .HasForeignKey(d => d.pantrol_UserCrea)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_kujo_tbPantallasPorRol_pantrol_UserCrea_acce_tbUsuarios_user_Id");

                entity.HasOne(d => d.pantrol_UserModificaNavigation)
                    .WithMany(p => p.tbPantallasPorRolpantrol_UserModificaNavigation)
                    .HasForeignKey(d => d.pantrol_UserModifica)
                    .HasConstraintName("FK_kujo_tbPantallasPorRol_pantrol_UserModifica_acce_tbUsuarios_user_Id");

                entity.HasOne(d => d.role)
                    .WithMany(p => p.tbPantallasPorRol)
                    .HasForeignKey(d => d.role_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_acce_tbPantallasPorRol_tbRoles_role_Id");
            });

            modelBuilder.Entity<tbProductos>(entity =>
            {
                entity.HasKey(e => e.prod_Id)
                    .HasName("PK_kujo_tbProductos_prod_Id");

                entity.ToTable("tbProductos", "kujo");

                entity.Property(e => e.prod_Descripcion).HasMaxLength(150);

                entity.Property(e => e.prod_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.prod_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.prod_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.prod_Precio).HasColumnType("decimal(18, 2)");

                entity.HasOne(d => d.cate)
                    .WithMany(p => p.tbProductos)
                    .HasForeignKey(d => d.cate_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_kujo_tbProductos_tbCategorias_cate_Id");

                entity.HasOne(d => d.prod_UserCreaNavigation)
                    .WithMany(p => p.tbProductosprod_UserCreaNavigation)
                    .HasForeignKey(d => d.prod_UserCrea)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_kujo_tbProductos_UserCrea_usua_Id");

                entity.HasOne(d => d.prod_UserModificaNavigation)
                    .WithMany(p => p.tbProductosprod_UserModificaNavigation)
                    .HasForeignKey(d => d.prod_UserModifica)
                    .HasConstraintName("FK_kujo_tbProductos_UserModifica_usua_Id");

                entity.HasOne(d => d.prov)
                    .WithMany(p => p.tbProductos)
                    .HasForeignKey(d => d.prov_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_kujo_tbProductod_tbProveedores_prov_Id");
            });

            modelBuilder.Entity<tbProveedores>(entity =>
            {
                entity.HasKey(e => e.prov_Id)
                    .HasName("PK_kujo_tbProveedores_prov_Id");

                entity.ToTable("tbProveedores", "kujo");

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.prov_Contacto)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.prov_Direccion)
                    .IsRequired()
                    .HasMaxLength(300);

                entity.Property(e => e.prov_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.prov_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.prov_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.prov_Nombre)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.HasOne(d => d.muni)
                    .WithMany(p => p.tbProveedores)
                    .HasForeignKey(d => d.muni_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_kujo_tbProveedores_tbMunicipios_muni_Id");

                entity.HasOne(d => d.prov_UserCreaNavigation)
                    .WithMany(p => p.tbProveedoresprov_UserCreaNavigation)
                    .HasForeignKey(d => d.prov_UserCrea)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_kujo_tbProveedores_UserCrea_usua_Id");

                entity.HasOne(d => d.prov_UserModificaNavigation)
                    .WithMany(p => p.tbProveedoresprov_UserModificaNavigation)
                    .HasForeignKey(d => d.prov_UserModifica)
                    .HasConstraintName("FK_kujo_tbProveedores_UserModifica_usua_Id");
            });

            modelBuilder.Entity<tbRoles>(entity =>
            {
                entity.HasKey(e => e.role_Id)
                    .HasName("PK_acce_tbRoles_role_Id");

                entity.ToTable("tbRoles", "acce");

                entity.HasIndex(e => e.role_Descripcion, "UQ_role_tbRoles_role_Descripcion")
                    .IsUnique();

                entity.Property(e => e.role_Descripcion)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.role_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.role_FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.role_FechaModifica).HasColumnType("datetime");

                entity.HasOne(d => d.role_UserCreaNavigation)
                    .WithMany(p => p.tbRolesrole_UserCreaNavigation)
                    .HasForeignKey(d => d.role_UserCrea)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_kujo_tbRoles_role_UserCrea_acce_tbUsuarios_user_Id");

                entity.HasOne(d => d.role_UserModificaNavigation)
                    .WithMany(p => p.tbRolesrole_UserModificaNavigation)
                    .HasForeignKey(d => d.role_UserModifica)
                    .HasConstraintName("FK_kujo_tbRoles_role_UserModifica_acce_tbUsuarios_user_Id");
            });

            modelBuilder.Entity<tbSucursales>(entity =>
            {
                entity.HasKey(e => e.sucu_Id)
                    .HasName("PK_kujo_tbSucursales_sucu_Id");

                entity.ToTable("tbSucursales", "kujo");

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.sucu_Direccion).HasMaxLength(200);

                entity.Property(e => e.sucu_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.sucu_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.sucu_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.sucu_Nombre)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.HasOne(d => d.muni)
                    .WithMany(p => p.tbSucursales)
                    .HasForeignKey(d => d.muni_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("PK_kujo_tbSucursales_tbMunicipios_muni_Id");

                entity.HasOne(d => d.sucu_UserCreaNavigation)
                    .WithMany(p => p.tbSucursalessucu_UserCreaNavigation)
                    .HasForeignKey(d => d.sucu_UserCrea)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_kujo_tbSucursales_UserCrea_usua_Id");

                entity.HasOne(d => d.sucu_UserModificaNavigation)
                    .WithMany(p => p.tbSucursalessucu_UserModificaNavigation)
                    .HasForeignKey(d => d.sucu_UserModifica)
                    .HasConstraintName("FK_kujo_tbSucursales_UserModifica_usua_Id");
            });

            modelBuilder.Entity<tbUsuarios>(entity =>
            {
                entity.HasKey(e => e.user_Id)
                    .HasName("PK_acce_tbUsuarios_user_Id");

                entity.ToTable("tbUsuarios", "acce");

                entity.HasIndex(e => e.user_NombreUsuario, "UQ_acce_tbUsuarios_user_NombreUsuario")
                    .IsUnique();

                entity.Property(e => e.user_Contraseña)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.user_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.user_FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.user_FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.user_NombreUsuario)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.HasOne(d => d.empl)
                    .WithMany(p => p.tbUsuarios)
                    .HasForeignKey(d => d.empl_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_acce_tbUsuarios_tbEmpleados_empl_Id");

                entity.HasOne(d => d.role)
                    .WithMany(p => p.tbUsuarios)
                    .HasForeignKey(d => d.role_Id)
                    .HasConstraintName("FK_acce_tbUsuarios_tbRoles_role_Id");

                entity.HasOne(d => d.user_UserCreaNavigation)
                    .WithMany(p => p.Inverseuser_UserCreaNavigation)
                    .HasForeignKey(d => d.user_UserCrea)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_acce_tbUsuarios_user_UserCrea_tbUsuarios_user_Id");

                entity.HasOne(d => d.user_UserModificaNavigation)
                    .WithMany(p => p.Inverseuser_UserModificaNavigation)
                    .HasForeignKey(d => d.user_UserModifica)
                    .HasConstraintName("FK_acce_tbUsuarios_user_UserModifica_tbUsuarios_user_Id");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}